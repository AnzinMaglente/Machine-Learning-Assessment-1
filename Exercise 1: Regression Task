{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "381fd637",
   "metadata": {
    "papermill": {
     "duration": 0.006609,
     "end_time": "2025-10-18T15:31:47.158323",
     "exception": false,
     "start_time": "2025-10-18T15:31:47.151714",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Assessment 1.1 - Regression Task\n",
    "## Brief\n",
    "In this exercise, the student is tasked with finding/creating a suitable dataset for regression (one that has a continous numeric value) that has at least 500 records and 5 features. Afterwards, they must explain and demonstrate their knowledge in machine learning by applying 1 or more regression algorithms (e.g., Linear Regression, Ridge/Lasso Regression, Decision Tree Regression) to their selected dataset. Clearly explaining each process from the start to the finish. Then, they need to evaluate how accurate their model is using appropriate evaluation metrics (Mean Absolute Error (MAE), Mean Squared Error (MSE), RÂ² score.). Finally, they have to create a visualization of their graphs and write a reflection on the whole activity (300 to 500 words). \n",
    "\n",
    "-------------------------------------------------------------------------------------\n",
    "\n",
    "## Setup\n",
    "For this activity, the student chose to work on a dataset on predicting heart failure containing 918 records with the following features:\n",
    "1. Age\n",
    "2. Sex\n",
    "3. Chest Pain Type\n",
    "4. Resting BP (Resting Blood Pressure) \n",
    "5. Cholesterol\n",
    "6. Fasting BS (Fasting Blood Sugar)\n",
    "7. Resting ECG (Resting Electrocardiogram)\n",
    "8. Max HR (Maximum Heart Rate)\n",
    "9. Exercise Angina\n",
    "10. Oldpeak (An exercise induced heart rate relative to rest)\n",
    "11. ST Slope (The slope that assess the heart's response to stress)\n",
    "12. Heart Disease\n",
    "\n",
    "First, thing you have to do is import every required library that you will be using in kaggle's python language. Second, you must find the csv (comma separated values) file in kaggle using the add input/upload button on the right side of your screen. Third, you print the data, this should show the first and last 5 records of your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fdfb32e3",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:47.171558Z",
     "iopub.status.busy": "2025-10-18T15:31:47.171132Z",
     "iopub.status.idle": "2025-10-18T15:31:52.310149Z",
     "shell.execute_reply": "2025-10-18T15:31:52.308308Z"
    },
    "papermill": {
     "duration": 5.147483,
     "end_time": "2025-10-18T15:31:52.312034",
     "exception": false,
     "start_time": "2025-10-18T15:31:47.164551",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
      "0     40   M           ATA        140          289          0     Normal   \n",
      "1     49   F           NAP        160          180          0     Normal   \n",
      "2     37   M           ATA        130          283          0         ST   \n",
      "3     48   F           ASY        138          214          0     Normal   \n",
      "4     54   M           NAP        150          195          0     Normal   \n",
      "..   ...  ..           ...        ...          ...        ...        ...   \n",
      "913   45   M            TA        110          264          0     Normal   \n",
      "914   68   M           ASY        144          193          1     Normal   \n",
      "915   57   M           ASY        130          131          0     Normal   \n",
      "916   57   F           ATA        130          236          0        LVH   \n",
      "917   38   M           NAP        138          175          0     Normal   \n",
      "\n",
      "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
      "0      172              N      0.0       Up             0  \n",
      "1      156              N      1.0     Flat             1  \n",
      "2       98              N      0.0       Up             0  \n",
      "3      108              Y      1.5     Flat             1  \n",
      "4      122              N      0.0       Up             0  \n",
      "..     ...            ...      ...      ...           ...  \n",
      "913    132              N      1.2     Flat             1  \n",
      "914    141              N      3.4     Flat             1  \n",
      "915    115              Y      1.2     Flat             1  \n",
      "916    174              N      0.0     Flat             1  \n",
      "917    173              N      0.0       Up             0  \n",
      "\n",
      "[918 rows x 12 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.linear_model import Ridge, Lasso\n",
    "from sklearn.linear_model import RidgeCV\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "data = pd.read_csv(\"/kaggle/input/heart-failure-prediction/heart.csv\")\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f50c6d19",
   "metadata": {
    "papermill": {
     "duration": 0.006403,
     "end_time": "2025-10-18T15:31:52.325637",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.319234",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Record Samples\n",
    "In this section, the student demonstrated how one could use the \".head\" and \".tail\" function in the pandas library, allowing the user to see a specify number of records inside the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d77282a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.338882Z",
     "iopub.status.busy": "2025-10-18T15:31:52.338542Z",
     "iopub.status.idle": "2025-10-18T15:31:52.363305Z",
     "shell.execute_reply": "2025-10-18T15:31:52.362008Z"
    },
    "papermill": {
     "duration": 0.033889,
     "end_time": "2025-10-18T15:31:52.365247",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.331358",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>140</td>\n",
       "      <td>289</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>172</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>F</td>\n",
       "      <td>NAP</td>\n",
       "      <td>160</td>\n",
       "      <td>180</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>156</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>283</td>\n",
       "      <td>0</td>\n",
       "      <td>ST</td>\n",
       "      <td>98</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>138</td>\n",
       "      <td>214</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>108</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>122</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>39</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>120</td>\n",
       "      <td>339</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>45</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>237</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>110</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>142</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>207</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>130</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>284</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>120</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n",
       "0   40   M           ATA        140          289          0     Normal    172   \n",
       "1   49   F           NAP        160          180          0     Normal    156   \n",
       "2   37   M           ATA        130          283          0         ST     98   \n",
       "3   48   F           ASY        138          214          0     Normal    108   \n",
       "4   54   M           NAP        150          195          0     Normal    122   \n",
       "5   39   M           NAP        120          339          0     Normal    170   \n",
       "6   45   F           ATA        130          237          0     Normal    170   \n",
       "7   54   M           ATA        110          208          0     Normal    142   \n",
       "8   37   M           ASY        140          207          0     Normal    130   \n",
       "9   48   F           ATA        120          284          0     Normal    120   \n",
       "\n",
       "  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "0              N      0.0       Up             0  \n",
       "1              N      1.0     Flat             1  \n",
       "2              N      0.0       Up             0  \n",
       "3              Y      1.5     Flat             1  \n",
       "4              N      0.0       Up             0  \n",
       "5              N      0.0       Up             0  \n",
       "6              N      0.0       Up             0  \n",
       "7              N      0.0       Up             0  \n",
       "8              Y      1.5     Flat             1  \n",
       "9              N      0.0       Up             0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "343a3fed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.379681Z",
     "iopub.status.busy": "2025-10-18T15:31:52.379359Z",
     "iopub.status.idle": "2025-10-18T15:31:52.396852Z",
     "shell.execute_reply": "2025-10-18T15:31:52.395207Z"
    },
    "papermill": {
     "duration": 0.026316,
     "end_time": "2025-10-18T15:31:52.398805",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.372489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>908</th>\n",
       "      <td>63</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>144</td>\n",
       "      <td>Y</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>63</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>124</td>\n",
       "      <td>197</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>136</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>910</th>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>157</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>182</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>164</td>\n",
       "      <td>176</td>\n",
       "      <td>1</td>\n",
       "      <td>LVH</td>\n",
       "      <td>90</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>912</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>241</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>123</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>45</td>\n",
       "      <td>M</td>\n",
       "      <td>TA</td>\n",
       "      <td>110</td>\n",
       "      <td>264</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>132</td>\n",
       "      <td>N</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>914</th>\n",
       "      <td>68</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>144</td>\n",
       "      <td>193</td>\n",
       "      <td>1</td>\n",
       "      <td>Normal</td>\n",
       "      <td>141</td>\n",
       "      <td>N</td>\n",
       "      <td>3.4</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>130</td>\n",
       "      <td>131</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>115</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>236</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>174</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>38</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>138</td>\n",
       "      <td>175</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>173</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
       "908   63   M           ASY        140          187          0        LVH   \n",
       "909   63   F           ASY        124          197          0     Normal   \n",
       "910   41   M           ATA        120          157          0     Normal   \n",
       "911   59   M           ASY        164          176          1        LVH   \n",
       "912   57   F           ASY        140          241          0     Normal   \n",
       "913   45   M            TA        110          264          0     Normal   \n",
       "914   68   M           ASY        144          193          1     Normal   \n",
       "915   57   M           ASY        130          131          0     Normal   \n",
       "916   57   F           ATA        130          236          0        LVH   \n",
       "917   38   M           NAP        138          175          0     Normal   \n",
       "\n",
       "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "908    144              Y      4.0       Up             1  \n",
       "909    136              Y      0.0     Flat             1  \n",
       "910    182              N      0.0       Up             0  \n",
       "911     90              N      1.0     Flat             1  \n",
       "912    123              Y      0.2     Flat             1  \n",
       "913    132              N      1.2     Flat             1  \n",
       "914    141              N      3.4     Flat             1  \n",
       "915    115              Y      1.2     Flat             1  \n",
       "916    174              N      0.0     Flat             1  \n",
       "917    173              N      0.0       Up             0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0325b46",
   "metadata": {
    "papermill": {
     "duration": 0.005723,
     "end_time": "2025-10-18T15:31:52.411149",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.405426",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Information on Dataset\n",
    "In this section, the student gathers the necessary information on the data set, this includes using the \".info\" function to see the amount of data are in one feature, the types of data, and the memory usage. \".shape\" on the other hand, shows the user the amount of rows and columns are in the data set. \".describe\" provides the user statistics on the dataset such as the average across all data (mean), the minimum and maximum value of data sets, and the standard deviation of the data (std)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "72d75c8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.424831Z",
     "iopub.status.busy": "2025-10-18T15:31:52.424284Z",
     "iopub.status.idle": "2025-10-18T15:31:52.455609Z",
     "shell.execute_reply": "2025-10-18T15:31:52.453334Z"
    },
    "papermill": {
     "duration": 0.040439,
     "end_time": "2025-10-18T15:31:52.457890",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.417451",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 918 entries, 0 to 917\n",
      "Data columns (total 12 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   Age             918 non-null    int64  \n",
      " 1   Sex             918 non-null    object \n",
      " 2   ChestPainType   918 non-null    object \n",
      " 3   RestingBP       918 non-null    int64  \n",
      " 4   Cholesterol     918 non-null    int64  \n",
      " 5   FastingBS       918 non-null    int64  \n",
      " 6   RestingECG      918 non-null    object \n",
      " 7   MaxHR           918 non-null    int64  \n",
      " 8   ExerciseAngina  918 non-null    object \n",
      " 9   Oldpeak         918 non-null    float64\n",
      " 10  ST_Slope        918 non-null    object \n",
      " 11  HeartDisease    918 non-null    int64  \n",
      "dtypes: float64(1), int64(6), object(5)\n",
      "memory usage: 86.2+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bfe79ec7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.472543Z",
     "iopub.status.busy": "2025-10-18T15:31:52.472202Z",
     "iopub.status.idle": "2025-10-18T15:31:52.480293Z",
     "shell.execute_reply": "2025-10-18T15:31:52.478913Z"
    },
    "papermill": {
     "duration": 0.017806,
     "end_time": "2025-10-18T15:31:52.482878",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.465072",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(918, 12)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "54df1168",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.496746Z",
     "iopub.status.busy": "2025-10-18T15:31:52.496305Z",
     "iopub.status.idle": "2025-10-18T15:31:52.532066Z",
     "shell.execute_reply": "2025-10-18T15:31:52.530758Z"
    },
    "papermill": {
     "duration": 0.044964,
     "end_time": "2025-10-18T15:31:52.534185",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.489221",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>53.510893</td>\n",
       "      <td>132.396514</td>\n",
       "      <td>198.799564</td>\n",
       "      <td>0.233115</td>\n",
       "      <td>136.809368</td>\n",
       "      <td>0.887364</td>\n",
       "      <td>0.553377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.432617</td>\n",
       "      <td>18.514154</td>\n",
       "      <td>109.384145</td>\n",
       "      <td>0.423046</td>\n",
       "      <td>25.460334</td>\n",
       "      <td>1.066570</td>\n",
       "      <td>0.497414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>-2.600000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>173.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>130.000000</td>\n",
       "      <td>223.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>138.000000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>267.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>77.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>603.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>202.000000</td>\n",
       "      <td>6.200000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age   RestingBP  Cholesterol   FastingBS       MaxHR  \\\n",
       "count  918.000000  918.000000   918.000000  918.000000  918.000000   \n",
       "mean    53.510893  132.396514   198.799564    0.233115  136.809368   \n",
       "std      9.432617   18.514154   109.384145    0.423046   25.460334   \n",
       "min     28.000000    0.000000     0.000000    0.000000   60.000000   \n",
       "25%     47.000000  120.000000   173.250000    0.000000  120.000000   \n",
       "50%     54.000000  130.000000   223.000000    0.000000  138.000000   \n",
       "75%     60.000000  140.000000   267.000000    0.000000  156.000000   \n",
       "max     77.000000  200.000000   603.000000    1.000000  202.000000   \n",
       "\n",
       "          Oldpeak  HeartDisease  \n",
       "count  918.000000    918.000000  \n",
       "mean     0.887364      0.553377  \n",
       "std      1.066570      0.497414  \n",
       "min     -2.600000      0.000000  \n",
       "25%      0.000000      0.000000  \n",
       "50%      0.600000      1.000000  \n",
       "75%      1.500000      1.000000  \n",
       "max      6.200000      1.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a1e6a24",
   "metadata": {
    "papermill": {
     "duration": 0.006086,
     "end_time": "2025-10-18T15:31:52.547398",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.541312",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Cleaning\n",
    "In this section, the student drops all of the unrequired values inside the dataset, this includes any data with objects/strings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7c0b32cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.561812Z",
     "iopub.status.busy": "2025-10-18T15:31:52.561033Z",
     "iopub.status.idle": "2025-10-18T15:31:52.573783Z",
     "shell.execute_reply": "2025-10-18T15:31:52.572849Z"
    },
    "papermill": {
     "duration": 0.021916,
     "end_time": "2025-10-18T15:31:52.575639",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.553723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>140</td>\n",
       "      <td>289</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>160</td>\n",
       "      <td>180</td>\n",
       "      <td>0</td>\n",
       "      <td>156</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>130</td>\n",
       "      <td>283</td>\n",
       "      <td>0</td>\n",
       "      <td>98</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>138</td>\n",
       "      <td>214</td>\n",
       "      <td>0</td>\n",
       "      <td>108</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>0</td>\n",
       "      <td>122</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  RestingBP  Cholesterol  FastingBS  MaxHR  Oldpeak  HeartDisease\n",
       "0   40        140          289          0    172      0.0             0\n",
       "1   49        160          180          0    156      1.0             1\n",
       "2   37        130          283          0     98      0.0             0\n",
       "3   48        138          214          0    108      1.5             1\n",
       "4   54        150          195          0    122      0.0             0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = data.drop([\"Sex\", \"ChestPainType\", \"RestingECG\", \"ExerciseAngina\", \"ST_Slope\"], axis = 1)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed43c371",
   "metadata": {
    "papermill": {
     "duration": 0.00688,
     "end_time": "2025-10-18T15:31:52.589301",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.582421",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Visualization (Raw)\n",
    "In this section, the student visualise the raw data of each feature in the dataset with the use of a bar graph (using seaborn and the matplotlib.pyplot libraries)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "12a921b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.604778Z",
     "iopub.status.busy": "2025-10-18T15:31:52.604442Z",
     "iopub.status.idle": "2025-10-18T15:31:52.947110Z",
     "shell.execute_reply": "2025-10-18T15:31:52.945858Z"
    },
    "papermill": {
     "duration": 0.352635,
     "end_time": "2025-10-18T15:31:52.948876",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.596241",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6,4))\n",
    "sns.histplot(data['Age'])\n",
    "plt.title('Age of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c65caece",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:52.964579Z",
     "iopub.status.busy": "2025-10-18T15:31:52.964251Z",
     "iopub.status.idle": "2025-10-18T15:31:53.255872Z",
     "shell.execute_reply": "2025-10-18T15:31:53.253898Z"
    },
    "papermill": {
     "duration": 0.3022,
     "end_time": "2025-10-18T15:31:53.258143",
     "exception": false,
     "start_time": "2025-10-18T15:31:52.955943",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['RestingBP'])\n",
    "plt.title('Resting Blood Pressure of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f6987230",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:53.276411Z",
     "iopub.status.busy": "2025-10-18T15:31:53.275247Z",
     "iopub.status.idle": "2025-10-18T15:31:53.596271Z",
     "shell.execute_reply": "2025-10-18T15:31:53.594811Z"
    },
    "papermill": {
     "duration": 0.33217,
     "end_time": "2025-10-18T15:31:53.598343",
     "exception": false,
     "start_time": "2025-10-18T15:31:53.266173",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(4,3))\n",
    "sns.histplot(data['Cholesterol'])\n",
    "plt.title('Cholesterol of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9c1c1cad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:53.617791Z",
     "iopub.status.busy": "2025-10-18T15:31:53.617406Z",
     "iopub.status.idle": "2025-10-18T15:31:53.897269Z",
     "shell.execute_reply": "2025-10-18T15:31:53.895644Z"
    },
    "papermill": {
     "duration": 0.292211,
     "end_time": "2025-10-18T15:31:53.899490",
     "exception": false,
     "start_time": "2025-10-18T15:31:53.607279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 200x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(2,3))\n",
    "sns.histplot(data['FastingBS'])\n",
    "plt.title('Fasting Blood Sugar of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2e920b0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:53.919615Z",
     "iopub.status.busy": "2025-10-18T15:31:53.919273Z",
     "iopub.status.idle": "2025-10-18T15:31:54.179234Z",
     "shell.execute_reply": "2025-10-18T15:31:54.178013Z"
    },
    "papermill": {
     "duration": 0.2726,
     "end_time": "2025-10-18T15:31:54.181517",
     "exception": false,
     "start_time": "2025-10-18T15:31:53.908917",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['MaxHR'])\n",
    "plt.title('Maximum Heart Rate of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "509e9e5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:54.201702Z",
     "iopub.status.busy": "2025-10-18T15:31:54.201395Z",
     "iopub.status.idle": "2025-10-18T15:31:54.471561Z",
     "shell.execute_reply": "2025-10-18T15:31:54.470008Z"
    },
    "papermill": {
     "duration": 0.283276,
     "end_time": "2025-10-18T15:31:54.474459",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.191183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "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wMfHB4cPH8ZXX32FwYMHIy8vDxkZGZK9j2lpabC3twcA2Nvb488//5SMr/hq7OI+2iiVSiiVykqeEyIiIqqNuOexmisqKkJubi58fHxgaGiIxMREcdi5c+dw7do1+Pn5AQD8/Pxw4sQJpKeni33i4+OhUqng6en5wmsnIiKi2od7HquRiIgI9OrVCw0aNMCDBw8QGxuLvXv3YufOnVCr1RgzZgzCw8NhZWUFlUqFsLAw+Pn5oV27dgAAf39/eHp6Yvjw4Zg3bx5SU1Mxbdo0hIaGcs8iERERVQqGx2okPT0dI0aMwK1bt6BWq9G8eXPs3LkTPXv2BAB8+eWX0NPTQ3BwMHJzcxEQEIBly5aJr9fX18e2bdswfvx4+Pn5wczMDCEhIYiKitLVLBEREVEtw/BYjaxcufKZw42NjbF06VIsXbq01D7Ozs7Yvn17ZZdGREREBIDnPBIRERFRGTA8EhEREZFsDI9EREREJBvDIxERERHJxvBIRERERLIxPBIRERGRbAyPRERERCQbwyMRERERycbwSERERESyMTwSERERkWwMj0REREQkG8MjEREREcnG8EhEREREsjE8EhEREZFsDI9EREREJBvDIxERERHJxvBIRERERLIxPBIRERGRbAyPRERERCQbwyMRERERycbwSERERESyMTwSERERkWwMj0REREQkG8MjEREREcnG8EhEREREsjE8EhEREZFsDI9EREREJBvDYzUSHR2NNm3awMLCAra2tujfvz/OnTsn6dOlSxcoFArJ41//+pekz7Vr1xAUFARTU1PY2tpiypQpKCgoeJGzQkRERLWUga4LoP9JSkpCaGgo2rRpg4KCAnz88cfw9/fH6dOnYWZmJvYbO3YsoqKixOempqbi/wsLCxEUFAR7e3scOHAAt27dwogRI2BoaIg5c+a80PkhIiKi2ofhsRqJi4uTPF+zZg1sbW2RkpKCTp06ie2mpqawt7fXOo5du3bh9OnTSEhIgJ2dHVq2bIlZs2Zh6tSpmDlzJoyMjKp0HoiIiKh242Hrakyj0QAArKysJO3r169H3bp14eXlhYiICDx8+FAclpycDG9vb9jZ2YltAQEByMzMxKlTp7ROJzc3F5mZmZIHERERkTbc81hNFRUVYdKkSejQoQO8vLzE9jfffBPOzs5wdHTE8ePHMXXqVJw7dw4///wzACA1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\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['Oldpeak'])\n",
    "plt.title('Exercise-induced ST (Sinus Tachycardia) segment depression relative to rest')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "cee635a9",
   "metadata": {
    "papermill": {
     "duration": 0.009327,
     "end_time": "2025-10-18T15:31:54.494225",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.484898",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0c9f4b64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:54.514837Z",
     "iopub.status.busy": "2025-10-18T15:31:54.514527Z",
     "iopub.status.idle": "2025-10-18T15:31:54.730255Z",
     "shell.execute_reply": "2025-10-18T15:31:54.728779Z"
    },
    "papermill": {
     "duration": 0.228231,
     "end_time": "2025-10-18T15:31:54.732380",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.504149",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['HeartDisease'])\n",
    "plt.title('Likelihood of Heart Disease in Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffed372f",
   "metadata": {
    "papermill": {
     "duration": 0.009641,
     "end_time": "2025-10-18T15:31:54.752476",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.742835",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "--------------------------------------------------------------------------------------\n",
    "## Target Predictions on Potential Heart-Related Problems in Patients\n",
    "In this section, the student used several regression algorithms to estimate future trends between the variables in identifying heart failure.\n",
    "### 1.1 How does age relate to one's resting BP?\n",
    "For this first task, we will be using linear regression to model and predict the relationship between age and resting blood pressure. We first set up our target (x value) and feature (y value). Then split the training data with the test data (the difference being, training data is what is being used to train the model, while test data is how effective is the model) using sklearn \"train_test_split\" function. Then you fit the training data inside a linear regression model. And using the test data the model can finally predict how each variable will affect each other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "44aaaf3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:54.775025Z",
     "iopub.status.busy": "2025-10-18T15:31:54.774232Z",
     "iopub.status.idle": "2025-10-18T15:31:54.808357Z",
     "shell.execute_reply": "2025-10-18T15:31:54.806992Z"
    },
    "papermill": {
     "duration": 0.047938,
     "end_time": "2025-10-18T15:31:54.810337",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.762399",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = data[['Age']]\n",
    "Y = data['RestingBP']\n",
    "\n",
    "#Splitting the data.\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size = 0.8, test_size=0.2)\n",
    "\n",
    "model = LinearRegression()\n",
    "model.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "87c27e96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:54.833647Z",
     "iopub.status.busy": "2025-10-18T15:31:54.832841Z",
     "iopub.status.idle": "2025-10-18T15:31:54.843586Z",
     "shell.execute_reply": "2025-10-18T15:31:54.841830Z"
    },
    "papermill": {
     "duration": 0.024664,
     "end_time": "2025-10-18T15:31:54.845758",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.821094",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([134.7460976 , 137.22403931, 132.76374424, 134.7460976 ,\n",
       "       120.37403569, 134.25050926, 137.22403931, 128.7990375 ,\n",
       "       133.25933258, 134.25050926, 127.31227247, 129.79021418,\n",
       "       128.30344916, 130.78139087, 130.28580253, 133.25933258,\n",
       "       129.79021418, 136.23286263, 128.30344916, 135.73727429,\n",
       "       126.32109579, 126.32109579, 132.76374424, 134.7460976 ,\n",
       "       126.81668413, 136.72845097, 125.32991911, 129.29462584,\n",
       "       124.83433076, 131.77256755, 134.7460976 , 126.81668413,\n",
       "       137.22403931, 130.78139087, 132.26815589, 134.25050926,\n",
       "       138.215216  , 125.82550745, 139.20639268, 133.75492092,\n",
       "       125.32991911, 137.22403931, 139.70198102, 131.77256755,\n",
       "       134.7460976 , 133.75492092, 132.76374424, 121.36521237,\n",
       "       134.25050926, 137.71962766, 129.79021418, 129.79021418,\n",
       "       134.25050926, 129.79021418, 129.29462584, 135.24168595,\n",
       "       134.25050926, 133.25933258, 129.29462584, 130.28580253,\n",
       "       129.29462584, 143.17109942, 129.79021418, 134.7460976 ,\n",
       "       131.77256755, 132.26815589, 135.73727429, 136.72845097,\n",
       "       129.79021418, 136.23286263, 123.84315408, 135.73727429,\n",
       "       133.75492092, 129.79021418, 133.25933258, 128.30344916,\n",
       "       134.7460976 , 129.79021418, 133.75492092, 133.75492092,\n",
       "       135.24168595, 121.86080071, 136.72845097, 141.18874605,\n",
       "       132.26815589, 124.83433076, 124.33874242, 140.19756937,\n",
       "       124.33874242, 131.27697921, 134.7460976 , 124.33874242,\n",
       "       129.29462584, 129.79021418, 130.28580253, 138.71080434,\n",
       "       134.25050926, 131.77256755, 137.71962766, 143.17109942,\n",
       "       140.19756937, 129.79021418, 141.18874605, 136.23286263,\n",
       "       131.77256755, 130.78139087, 132.76374424, 132.76374424,\n",
       "       138.215216  , 141.68433439, 132.26815589, 130.78139087,\n",
       "       126.32109579, 129.79021418, 127.31227247, 127.31227247,\n",
       "       128.7990375 , 136.23286263, 133.25933258, 133.75492092,\n",
       "       136.23286263, 137.71962766, 124.83433076, 130.78139087,\n",
       "       131.27697921, 132.76374424, 127.31227247, 138.215216  ,\n",
       "       135.73727429, 133.25933258, 131.77256755, 133.25933258,\n",
       "       131.77256755, 132.76374424, 136.72845097, 133.75492092,\n",
       "       131.27697921, 136.23286263, 128.30344916, 138.215216  ,\n",
       "       136.23286263, 131.77256755, 131.27697921, 123.34756574,\n",
       "       138.71080434, 128.30344916, 120.37403569, 133.25933258,\n",
       "       134.25050926, 130.28580253, 130.78139087, 123.34756574,\n",
       "       122.35638905, 138.71080434, 139.20639268, 128.30344916,\n",
       "       134.25050926, 135.73727429, 136.72845097, 137.71962766,\n",
       "       135.24168595, 144.1622761 , 128.7990375 , 138.71080434,\n",
       "       137.71962766, 128.7990375 , 135.73727429, 136.72845097,\n",
       "       133.25933258, 137.71962766, 127.31227247, 130.78139087,\n",
       "       129.79021418, 136.23286263, 134.25050926, 127.80786082,\n",
       "       133.25933258, 137.22403931, 130.78139087, 132.26815589,\n",
       "       132.26815589, 131.27697921, 131.27697921, 122.8519774 ])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_predict = model.predict(X_test)\n",
    "Y_predict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4b980231",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:54.868399Z",
     "iopub.status.busy": "2025-10-18T15:31:54.868031Z",
     "iopub.status.idle": "2025-10-18T15:31:55.139419Z",
     "shell.execute_reply": "2025-10-18T15:31:55.138025Z"
    },
    "papermill": {
     "duration": 0.285207,
     "end_time": "2025-10-18T15:31:55.141441",
     "exception": false,
     "start_time": "2025-10-18T15:31:54.856234",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Predicted Blood Pressure Relative to Age')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6,4))\n",
    "plt.scatter(X_train, Y_train,color='g', s=5)\n",
    "plt.plot(X_test, Y_predict, color='k')\n",
    "plt.title('Predicted Blood Pressure Relative to Age')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4747547",
   "metadata": {
    "papermill": {
     "duration": 0.010583,
     "end_time": "2025-10-18T15:31:55.162986",
     "exception": false,
     "start_time": "2025-10-18T15:31:55.152403",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Discussion of Results\n",
    "This indicates that the machine predicts that there will be a upward trend when it comes to growing up and one's resting blood pressure which suggests an direct proportion relation between both variables; that the older you are, the higher blood pressure you'll have.\n",
    "### 1.2 Validation of Results\n",
    "For this second task we will be measuring the dataset using Ridge Regression\n",
    "\n",
    "Ridge method is used due to having many features being examined\n",
    "\n",
    "Lasso method is only used when select features are being examined\n",
    "\n",
    "Mean-Squared Error tells us what the average squared difference between the actual values and the predicted values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9a79b32c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:55.187108Z",
     "iopub.status.busy": "2025-10-18T15:31:55.185806Z",
     "iopub.status.idle": "2025-10-18T15:31:55.218422Z",
     "shell.execute_reply": "2025-10-18T15:31:55.216913Z"
    },
    "papermill": {
     "duration": 0.046473,
     "end_time": "2025-10-18T15:31:55.220225",
     "exception": false,
     "start_time": "2025-10-18T15:31:55.173752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The train score for lr model is 0.06149807494460491\n",
      "The test score for lr model is 0.0786541511355493\n",
      "\n",
      "Ridge Model............................................\n",
      "\n",
      "The train score for ridge model is 0.0614980735018642\n",
      "The test score for ridge model is 0.07865326637064918\n",
      "\n",
      "Lasso Model............................................\n",
      "\n",
      "The train score for ls model is 0.058332363896086425\n",
      "The test score for ls model is 0.0734934300069362\n"
     ]
    }
   ],
   "source": [
    "train_score_lr = model.score(X_train, Y_train)\n",
    "test_score_lr = model.score(X_test, Y_test)\n",
    "\n",
    "print(\"The train score for lr model is {}\".format(train_score_lr))\n",
    "print(\"The test score for lr model is {}\".format(test_score_lr))\n",
    "\n",
    "ridgeReg = Ridge(alpha=10)\n",
    "\n",
    "ridgeReg.fit(X_train,Y_train)\n",
    "\n",
    "#train and test scorefor ridge regression\n",
    "train_score_ridge = ridgeReg.score(X_train, Y_train)\n",
    "test_score_ridge = ridgeReg.score(X_test, Y_test)\n",
    "\n",
    "print(\"\\nRidge Model............................................\\n\")\n",
    "print(\"The train score for ridge model is {}\".format(train_score_ridge))\n",
    "print(\"The test score for ridge model is {}\".format(test_score_ridge))\n",
    "\n",
    "#Lasso regression model\n",
    "print(\"\\nLasso Model............................................\\n\")\n",
    "lasso = Lasso(alpha = 10)\n",
    "lasso.fit(X_train,Y_train)\n",
    "train_score_ls =lasso.score(X_train,Y_train)\n",
    "test_score_ls =lasso.score(X_test,Y_test)\n",
    "\n",
    "print(\"The train score for ls model is {}\".format(train_score_ls))\n",
    "print(\"The test score for ls model is {}\".format(test_score_ls))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a935377b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T15:31:55.243628Z",
     "iopub.status.busy": "2025-10-18T15:31:55.243309Z",
     "iopub.status.idle": "2025-10-18T15:31:55.261129Z",
     "shell.execute_reply": "2025-10-18T15:31:55.259925Z"
    },
    "papermill": {
     "duration": 0.031554,
     "end_time": "2025-10-18T15:31:55.262914",
     "exception": false,
     "start_time": "2025-10-18T15:31:55.231360",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The train score for ridge model is 0.0614980735018642\n",
      "The test score for ridge model is 0.07865326637064618\n"
     ]
    }
   ],
   "source": [
    "ridge_cv = RidgeCV(alphas = [0.0001, 0.001,0.01, 0.1, 1, 10]).fit(X_train, Y_train)\n",
    "\n",
    "#score\n",
    "print(\"The train score for ridge model is {}\".format(ridge_cv.score(X_train, Y_train)))\n",
    "print(\"The test score for ridge model is {}\".format(ridge_cv.score(X_test, Y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e95a2e3",
   "metadata": {
    "papermill": {
     "duration": 0.011262,
     "end_time": "2025-10-18T15:31:55.285479",
     "exception": false,
     "start_time": "2025-10-18T15:31:55.274217",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1582403,
     "sourceId": 2603715,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31153,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 14.761977,
   "end_time": "2025-10-18T15:31:56.020240",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-10-18T15:31:41.258263",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
