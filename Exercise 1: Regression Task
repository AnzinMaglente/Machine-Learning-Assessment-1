{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "35415266",
   "metadata": {
    "papermill": {
     "duration": 0.008912,
     "end_time": "2025-10-18T20:31:28.091086",
     "exception": false,
     "start_time": "2025-10-18T20:31:28.082174",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Assessment 1.1 - Regression Task\n",
    "-------------------------------------------------------------------------------------\n",
    "## Brief\n",
    "In this exercise, the student is tasked with finding/creating a suitable dataset for regression (one that has a continous numeric value) that has at least 500 records and 5 features. Afterwards, they must explain and demonstrate their knowledge in machine learning by applying 1 or more regression algorithms (e.g., Linear Regression, Ridge/Lasso Regression, Decision Tree Regression) to their selected dataset. Clearly explaining each process from the start to the finish. Then, they need to evaluate how accurate their model is using appropriate evaluation metrics (Mean Absolute Error (MAE), Mean Squared Error (MSE), RÂ² score.). Finally, they have to create a visualization of their graphs and write a reflection on the whole activity (300 to 500 words). \n",
    "\n",
    "-------------------------------------------------------------------------------------\n",
    "\n",
    "## Setup\n",
    "For this activity, the student chose to work on a dataset on predicting heart failure containing 918 records with the following variables:\n",
    "1. Age\n",
    "2. Sex\n",
    "3. Chest Pain Type\n",
    "4. Resting BP (Resting Blood Pressure) \n",
    "5. Cholesterol\n",
    "6. Fasting BS (Fasting Blood Sugar)\n",
    "7. Resting ECG (Resting Electrocardiogram)\n",
    "8. Max HR (Maximum Heart Rate)\n",
    "9. Exercise Angina\n",
    "10. Oldpeak (An exercise induced heart rate relative to rest)\n",
    "11. ST Slope (The slope that assess the heart's response to stress)\n",
    "12. Heart Disease\n",
    "\n",
    "First, thing you have to do is import every required library that you will be using in Kaggle's python language. Second, you must find the csv (comma separated values) file in Kaggle using the add input/upload button on the right side of your screen. Third, you print the data, this should show the first and last 5 records of your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fae43f51",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:28.108598Z",
     "iopub.status.busy": "2025-10-18T20:31:28.108285Z",
     "iopub.status.idle": "2025-10-18T20:31:32.690992Z",
     "shell.execute_reply": "2025-10-18T20:31:32.689917Z"
    },
    "papermill": {
     "duration": 4.593254,
     "end_time": "2025-10-18T20:31:32.692604",
     "exception": false,
     "start_time": "2025-10-18T20:31:28.099350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
      "0     40   M           ATA        140          289          0     Normal   \n",
      "1     49   F           NAP        160          180          0     Normal   \n",
      "2     37   M           ATA        130          283          0         ST   \n",
      "3     48   F           ASY        138          214          0     Normal   \n",
      "4     54   M           NAP        150          195          0     Normal   \n",
      "..   ...  ..           ...        ...          ...        ...        ...   \n",
      "913   45   M            TA        110          264          0     Normal   \n",
      "914   68   M           ASY        144          193          1     Normal   \n",
      "915   57   M           ASY        130          131          0     Normal   \n",
      "916   57   F           ATA        130          236          0        LVH   \n",
      "917   38   M           NAP        138          175          0     Normal   \n",
      "\n",
      "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
      "0      172              N      0.0       Up             0  \n",
      "1      156              N      1.0     Flat             1  \n",
      "2       98              N      0.0       Up             0  \n",
      "3      108              Y      1.5     Flat             1  \n",
      "4      122              N      0.0       Up             0  \n",
      "..     ...            ...      ...      ...           ...  \n",
      "913    132              N      1.2     Flat             1  \n",
      "914    141              N      3.4     Flat             1  \n",
      "915    115              Y      1.2     Flat             1  \n",
      "916    174              N      0.0     Flat             1  \n",
      "917    173              N      0.0       Up             0  \n",
      "\n",
      "[918 rows x 12 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "import sklearn\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import RepeatedKFold\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.linear_model import Ridge, Lasso\n",
    "from sklearn.linear_model import RidgeCV\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.tree import export_graphviz\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "data = pd.read_csv(\"/kaggle/input/heart-failure-prediction/heart.csv\")\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7f418c6",
   "metadata": {
    "papermill": {
     "duration": 0.007101,
     "end_time": "2025-10-18T20:31:32.707969",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.700868",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Record Samples\n",
    "In this section, the student demonstrated how one could use the \".head\" and \".tail\" function in the pandas library, allowing the user to see a specify number of records inside the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "253e36fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.724147Z",
     "iopub.status.busy": "2025-10-18T20:31:32.723820Z",
     "iopub.status.idle": "2025-10-18T20:31:32.746501Z",
     "shell.execute_reply": "2025-10-18T20:31:32.745492Z"
    },
    "papermill": {
     "duration": 0.032635,
     "end_time": "2025-10-18T20:31:32.748138",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.715503",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>140</td>\n",
       "      <td>289</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>172</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>F</td>\n",
       "      <td>NAP</td>\n",
       "      <td>160</td>\n",
       "      <td>180</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>156</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>283</td>\n",
       "      <td>0</td>\n",
       "      <td>ST</td>\n",
       "      <td>98</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>138</td>\n",
       "      <td>214</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>108</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>122</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>39</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>120</td>\n",
       "      <td>339</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>45</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>237</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>110</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>142</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>207</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>130</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>284</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>120</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n",
       "0   40   M           ATA        140          289          0     Normal    172   \n",
       "1   49   F           NAP        160          180          0     Normal    156   \n",
       "2   37   M           ATA        130          283          0         ST     98   \n",
       "3   48   F           ASY        138          214          0     Normal    108   \n",
       "4   54   M           NAP        150          195          0     Normal    122   \n",
       "5   39   M           NAP        120          339          0     Normal    170   \n",
       "6   45   F           ATA        130          237          0     Normal    170   \n",
       "7   54   M           ATA        110          208          0     Normal    142   \n",
       "8   37   M           ASY        140          207          0     Normal    130   \n",
       "9   48   F           ATA        120          284          0     Normal    120   \n",
       "\n",
       "  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "0              N      0.0       Up             0  \n",
       "1              N      1.0     Flat             1  \n",
       "2              N      0.0       Up             0  \n",
       "3              Y      1.5     Flat             1  \n",
       "4              N      0.0       Up             0  \n",
       "5              N      0.0       Up             0  \n",
       "6              N      0.0       Up             0  \n",
       "7              N      0.0       Up             0  \n",
       "8              Y      1.5     Flat             1  \n",
       "9              N      0.0       Up             0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c57fbfcc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.765225Z",
     "iopub.status.busy": "2025-10-18T20:31:32.764903Z",
     "iopub.status.idle": "2025-10-18T20:31:32.778894Z",
     "shell.execute_reply": "2025-10-18T20:31:32.777702Z"
    },
    "papermill": {
     "duration": 0.024172,
     "end_time": "2025-10-18T20:31:32.780337",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.756165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>908</th>\n",
       "      <td>63</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>144</td>\n",
       "      <td>Y</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>63</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>124</td>\n",
       "      <td>197</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>136</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>910</th>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>157</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>182</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>164</td>\n",
       "      <td>176</td>\n",
       "      <td>1</td>\n",
       "      <td>LVH</td>\n",
       "      <td>90</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>912</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>241</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>123</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>45</td>\n",
       "      <td>M</td>\n",
       "      <td>TA</td>\n",
       "      <td>110</td>\n",
       "      <td>264</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>132</td>\n",
       "      <td>N</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>914</th>\n",
       "      <td>68</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>144</td>\n",
       "      <td>193</td>\n",
       "      <td>1</td>\n",
       "      <td>Normal</td>\n",
       "      <td>141</td>\n",
       "      <td>N</td>\n",
       "      <td>3.4</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>130</td>\n",
       "      <td>131</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>115</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>236</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>174</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>38</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>138</td>\n",
       "      <td>175</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>173</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
       "908   63   M           ASY        140          187          0        LVH   \n",
       "909   63   F           ASY        124          197          0     Normal   \n",
       "910   41   M           ATA        120          157          0     Normal   \n",
       "911   59   M           ASY        164          176          1        LVH   \n",
       "912   57   F           ASY        140          241          0     Normal   \n",
       "913   45   M            TA        110          264          0     Normal   \n",
       "914   68   M           ASY        144          193          1     Normal   \n",
       "915   57   M           ASY        130          131          0     Normal   \n",
       "916   57   F           ATA        130          236          0        LVH   \n",
       "917   38   M           NAP        138          175          0     Normal   \n",
       "\n",
       "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "908    144              Y      4.0       Up             1  \n",
       "909    136              Y      0.0     Flat             1  \n",
       "910    182              N      0.0       Up             0  \n",
       "911     90              N      1.0     Flat             1  \n",
       "912    123              Y      0.2     Flat             1  \n",
       "913    132              N      1.2     Flat             1  \n",
       "914    141              N      3.4     Flat             1  \n",
       "915    115              Y      1.2     Flat             1  \n",
       "916    174              N      0.0     Flat             1  \n",
       "917    173              N      0.0       Up             0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a80e471",
   "metadata": {
    "papermill": {
     "duration": 0.007829,
     "end_time": "2025-10-18T20:31:32.797742",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.789913",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Information on Dataset\n",
    "In this section, the student gathers the necessary information on the data set, this includes using the \".info\" function to see the amount of data are in one feature, the types of data, and the memory usage. \".shape\" on the other hand, shows the user the amount of rows and columns are in the data set. \".describe\" provides the user statistics on the dataset such as the average across all data (mean), the minimum and maximum value of data sets, and the standard deviation of the data (std)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6315a5f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.815296Z",
     "iopub.status.busy": "2025-10-18T20:31:32.814976Z",
     "iopub.status.idle": "2025-10-18T20:31:32.839904Z",
     "shell.execute_reply": "2025-10-18T20:31:32.838706Z"
    },
    "papermill": {
     "duration": 0.035736,
     "end_time": "2025-10-18T20:31:32.841722",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.805986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 918 entries, 0 to 917\n",
      "Data columns (total 12 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   Age             918 non-null    int64  \n",
      " 1   Sex             918 non-null    object \n",
      " 2   ChestPainType   918 non-null    object \n",
      " 3   RestingBP       918 non-null    int64  \n",
      " 4   Cholesterol     918 non-null    int64  \n",
      " 5   FastingBS       918 non-null    int64  \n",
      " 6   RestingECG      918 non-null    object \n",
      " 7   MaxHR           918 non-null    int64  \n",
      " 8   ExerciseAngina  918 non-null    object \n",
      " 9   Oldpeak         918 non-null    float64\n",
      " 10  ST_Slope        918 non-null    object \n",
      " 11  HeartDisease    918 non-null    int64  \n",
      "dtypes: float64(1), int64(6), object(5)\n",
      "memory usage: 86.2+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d3f0f8df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.859213Z",
     "iopub.status.busy": "2025-10-18T20:31:32.858897Z",
     "iopub.status.idle": "2025-10-18T20:31:32.864670Z",
     "shell.execute_reply": "2025-10-18T20:31:32.863808Z"
    },
    "papermill": {
     "duration": 0.0163,
     "end_time": "2025-10-18T20:31:32.866263",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.849963",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(918, 12)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "139db362",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.884327Z",
     "iopub.status.busy": "2025-10-18T20:31:32.884016Z",
     "iopub.status.idle": "2025-10-18T20:31:32.913476Z",
     "shell.execute_reply": "2025-10-18T20:31:32.912667Z"
    },
    "papermill": {
     "duration": 0.040472,
     "end_time": "2025-10-18T20:31:32.914952",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.874480",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>53.510893</td>\n",
       "      <td>132.396514</td>\n",
       "      <td>198.799564</td>\n",
       "      <td>0.233115</td>\n",
       "      <td>136.809368</td>\n",
       "      <td>0.887364</td>\n",
       "      <td>0.553377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.432617</td>\n",
       "      <td>18.514154</td>\n",
       "      <td>109.384145</td>\n",
       "      <td>0.423046</td>\n",
       "      <td>25.460334</td>\n",
       "      <td>1.066570</td>\n",
       "      <td>0.497414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>-2.600000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>173.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>130.000000</td>\n",
       "      <td>223.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>138.000000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>267.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>77.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>603.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>202.000000</td>\n",
       "      <td>6.200000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age   RestingBP  Cholesterol   FastingBS       MaxHR  \\\n",
       "count  918.000000  918.000000   918.000000  918.000000  918.000000   \n",
       "mean    53.510893  132.396514   198.799564    0.233115  136.809368   \n",
       "std      9.432617   18.514154   109.384145    0.423046   25.460334   \n",
       "min     28.000000    0.000000     0.000000    0.000000   60.000000   \n",
       "25%     47.000000  120.000000   173.250000    0.000000  120.000000   \n",
       "50%     54.000000  130.000000   223.000000    0.000000  138.000000   \n",
       "75%     60.000000  140.000000   267.000000    0.000000  156.000000   \n",
       "max     77.000000  200.000000   603.000000    1.000000  202.000000   \n",
       "\n",
       "          Oldpeak  HeartDisease  \n",
       "count  918.000000    918.000000  \n",
       "mean     0.887364      0.553377  \n",
       "std      1.066570      0.497414  \n",
       "min     -2.600000      0.000000  \n",
       "25%      0.000000      0.000000  \n",
       "50%      0.600000      1.000000  \n",
       "75%      1.500000      1.000000  \n",
       "max      6.200000      1.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6862520",
   "metadata": {
    "papermill": {
     "duration": 0.008023,
     "end_time": "2025-10-18T20:31:32.931410",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.923387",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing\n",
    "In this section, the data is being checked if there is any missing values / unneccessary data that can be removed before training the model. This includes handling missing values, scaling, encoding, and variable setting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4f0b841c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.949496Z",
     "iopub.status.busy": "2025-10-18T20:31:32.949205Z",
     "iopub.status.idle": "2025-10-18T20:31:32.956608Z",
     "shell.execute_reply": "2025-10-18T20:31:32.955859Z"
    },
    "papermill": {
     "duration": 0.018087,
     "end_time": "2025-10-18T20:31:32.958183",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.940096",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age               0\n",
       "Sex               0\n",
       "ChestPainType     0\n",
       "RestingBP         0\n",
       "Cholesterol       0\n",
       "FastingBS         0\n",
       "RestingECG        0\n",
       "MaxHR             0\n",
       "ExerciseAngina    0\n",
       "Oldpeak           0\n",
       "ST_Slope          0\n",
       "HeartDisease      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checks each feature if there is any null/empty values.\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "418c8088",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:32.976390Z",
     "iopub.status.busy": "2025-10-18T20:31:32.976099Z",
     "iopub.status.idle": "2025-10-18T20:31:32.982382Z",
     "shell.execute_reply": "2025-10-18T20:31:32.981479Z"
    },
    "papermill": {
     "duration": 0.017388,
     "end_time": "2025-10-18T20:31:32.984148",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.966760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Removes null/empty values.\n",
    "data = data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7459c778",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.002489Z",
     "iopub.status.busy": "2025-10-18T20:31:33.001928Z",
     "iopub.status.idle": "2025-10-18T20:31:33.007757Z",
     "shell.execute_reply": "2025-10-18T20:31:33.006898Z"
    },
    "papermill": {
     "duration": 0.016692,
     "end_time": "2025-10-18T20:31:33.009299",
     "exception": false,
     "start_time": "2025-10-18T20:31:32.992607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Drops any unneccessary features that won't be used inside the model.\n",
    "data = data.drop(['Sex', 'ChestPainType', 'RestingECG', 'FastingBS', 'ExerciseAngina', 'ST_Slope', 'HeartDisease'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d11294ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.027300Z",
     "iopub.status.busy": "2025-10-18T20:31:33.027007Z",
     "iopub.status.idle": "2025-10-18T20:31:33.042372Z",
     "shell.execute_reply": "2025-10-18T20:31:33.041522Z"
    },
    "papermill": {
     "duration": 0.0262,
     "end_time": "2025-10-18T20:31:33.044044",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.017844",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>0.70</td>\n",
       "      <td>0.479270</td>\n",
       "      <td>0.788732</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.298507</td>\n",
       "      <td>0.676056</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.469320</td>\n",
       "      <td>0.267606</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>0.69</td>\n",
       "      <td>0.354892</td>\n",
       "      <td>0.338028</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.323383</td>\n",
       "      <td>0.436620</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0   40       0.70     0.479270  0.788732  0.295455\n",
       "1   49       0.80     0.298507  0.676056  0.409091\n",
       "2   37       0.65     0.469320  0.267606  0.295455\n",
       "3   48       0.69     0.354892  0.338028  0.465909\n",
       "4   54       0.75     0.323383  0.436620  0.295455"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Scale each numeric data to fit each other.\n",
    "scaler = MinMaxScaler()\n",
    "data[data.columns[1:]] = scaler.fit_transform(data[data.columns[1:]])\n",
    "\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b519b6f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.063123Z",
     "iopub.status.busy": "2025-10-18T20:31:33.062169Z",
     "iopub.status.idle": "2025-10-18T20:31:33.069812Z",
     "shell.execute_reply": "2025-10-18T20:31:33.068969Z"
    },
    "papermill": {
     "duration": 0.018549,
     "end_time": "2025-10-18T20:31:33.071290",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.052741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Feature Selection.\n",
    "x = data[['RestingBP', 'Cholesterol', 'MaxHR', 'Oldpeak']]      # Feature\n",
    "y = data['Age']                                                 # Target\n",
    "\n",
    "# Splitting the data.\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, train_size = 0.8, test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5ea24bea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.090000Z",
     "iopub.status.busy": "2025-10-18T20:31:33.089085Z",
     "iopub.status.idle": "2025-10-18T20:31:33.100367Z",
     "shell.execute_reply": "2025-10-18T20:31:33.099431Z"
    },
    "papermill": {
     "duration": 0.021966,
     "end_time": "2025-10-18T20:31:33.101887",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.079921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.381426</td>\n",
       "      <td>0.563380</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>572</th>\n",
       "      <td>0.750</td>\n",
       "      <td>0.320066</td>\n",
       "      <td>0.528169</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>419</th>\n",
       "      <td>0.710</td>\n",
       "      <td>0.378109</td>\n",
       "      <td>0.626761</td>\n",
       "      <td>0.579545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>763</th>\n",
       "      <td>0.660</td>\n",
       "      <td>0.371476</td>\n",
       "      <td>0.795775</td>\n",
       "      <td>0.659091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>427</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.401408</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.431177</td>\n",
       "      <td>0.366197</td>\n",
       "      <td>0.636364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>534</th>\n",
       "      <td>0.625</td>\n",
       "      <td>0.368159</td>\n",
       "      <td>0.528169</td>\n",
       "      <td>0.579545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.394693</td>\n",
       "      <td>0.563380</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>0.725</td>\n",
       "      <td>0.540630</td>\n",
       "      <td>0.669014</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.270315</td>\n",
       "      <td>0.809859</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>734 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "128      0.600     0.381426  0.563380  0.295455\n",
       "572      0.750     0.320066  0.528169  0.352273\n",
       "419      0.710     0.378109  0.626761  0.579545\n",
       "763      0.660     0.371476  0.795775  0.659091\n",
       "427      0.700     0.000000  0.401408  0.409091\n",
       "..         ...          ...       ...       ...\n",
       "416      0.700     0.431177  0.366197  0.636364\n",
       "534      0.625     0.368159  0.528169  0.579545\n",
       "183      0.550     0.394693  0.563380  0.409091\n",
       "240      0.725     0.540630  0.669014  0.295455\n",
       "127      0.540     0.270315  0.809859  0.522727\n",
       "\n",
       "[734 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Showing off x_train.\n",
    "x_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b3badf11",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.122112Z",
     "iopub.status.busy": "2025-10-18T20:31:33.121215Z",
     "iopub.status.idle": "2025-10-18T20:31:33.132770Z",
     "shell.execute_reply": "2025-10-18T20:31:33.131723Z"
    },
    "papermill": {
     "duration": 0.023276,
     "end_time": "2025-10-18T20:31:33.134287",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.111011",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.373239</td>\n",
       "      <td>0.454545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541</th>\n",
       "      <td>0.520</td>\n",
       "      <td>0.187396</td>\n",
       "      <td>0.422535</td>\n",
       "      <td>0.693182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>788</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.349917</td>\n",
       "      <td>0.387324</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>747</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.374793</td>\n",
       "      <td>0.830986</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>0.525</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>0.575</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.549296</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>694</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.391376</td>\n",
       "      <td>0.830986</td>\n",
       "      <td>0.386364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>507</th>\n",
       "      <td>0.530</td>\n",
       "      <td>0.398010</td>\n",
       "      <td>0.140845</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.396352</td>\n",
       "      <td>0.464789</td>\n",
       "      <td>0.613636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556</th>\n",
       "      <td>0.800</td>\n",
       "      <td>0.514096</td>\n",
       "      <td>0.366197</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>184 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "342      0.550     0.000000  0.373239  0.454545\n",
       "541      0.520     0.187396  0.422535  0.693182\n",
       "788      0.600     0.349917  0.387324  0.465909\n",
       "747      0.700     0.374793  0.830986  0.295455\n",
       "295      0.525     0.000000  0.352113  0.465909\n",
       "..         ...          ...       ...       ...\n",
       "308      0.575     0.000000  0.549296  0.352273\n",
       "694      0.600     0.391376  0.830986  0.386364\n",
       "507      0.530     0.398010  0.140845  0.295455\n",
       "835      0.550     0.396352  0.464789  0.613636\n",
       "556      0.800     0.514096  0.366197  0.522727\n",
       "\n",
       "[184 rows x 4 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Showing off x_test.\n",
    "x_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7710d03f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.154013Z",
     "iopub.status.busy": "2025-10-18T20:31:33.153684Z",
     "iopub.status.idle": "2025-10-18T20:31:33.167133Z",
     "shell.execute_reply": "2025-10-18T20:31:33.166306Z"
    },
    "papermill": {
     "duration": 0.02524,
     "end_time": "2025-10-18T20:31:33.168486",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.143246",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.381426</td>\n",
       "      <td>0.563380</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.750</td>\n",
       "      <td>0.320066</td>\n",
       "      <td>0.528169</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.710</td>\n",
       "      <td>0.378109</td>\n",
       "      <td>0.626761</td>\n",
       "      <td>0.579545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.660</td>\n",
       "      <td>0.371476</td>\n",
       "      <td>0.795775</td>\n",
       "      <td>0.659091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.401408</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>729</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.431177</td>\n",
       "      <td>0.366197</td>\n",
       "      <td>0.636364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>730</th>\n",
       "      <td>0.625</td>\n",
       "      <td>0.368159</td>\n",
       "      <td>0.528169</td>\n",
       "      <td>0.579545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>731</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.394693</td>\n",
       "      <td>0.563380</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>0.725</td>\n",
       "      <td>0.540630</td>\n",
       "      <td>0.669014</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.270315</td>\n",
       "      <td>0.809859</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>734 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0        0.600     0.381426  0.563380  0.295455\n",
       "1        0.750     0.320066  0.528169  0.352273\n",
       "2        0.710     0.378109  0.626761  0.579545\n",
       "3        0.660     0.371476  0.795775  0.659091\n",
       "4        0.700     0.000000  0.401408  0.409091\n",
       "..         ...          ...       ...       ...\n",
       "729      0.700     0.431177  0.366197  0.636364\n",
       "730      0.625     0.368159  0.528169  0.579545\n",
       "731      0.550     0.394693  0.563380  0.409091\n",
       "732      0.725     0.540630  0.669014  0.295455\n",
       "733      0.540     0.270315  0.809859  0.522727\n",
       "\n",
       "[734 rows x 4 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fixing the x_train index\n",
    "\n",
    "fixed_x_train = x_train.reset_index()\n",
    "fixed_x_train = fixed_x_train.drop(['index'], axis = 1)\n",
    "fixed_x_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b2f61a3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.188102Z",
     "iopub.status.busy": "2025-10-18T20:31:33.187817Z",
     "iopub.status.idle": "2025-10-18T20:31:33.200467Z",
     "shell.execute_reply": "2025-10-18T20:31:33.199686Z"
    },
    "papermill": {
     "duration": 0.024262,
     "end_time": "2025-10-18T20:31:33.202122",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.177860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.373239</td>\n",
       "      <td>0.454545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.520</td>\n",
       "      <td>0.187396</td>\n",
       "      <td>0.422535</td>\n",
       "      <td>0.693182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.349917</td>\n",
       "      <td>0.387324</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.374793</td>\n",
       "      <td>0.830986</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.525</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>0.575</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.549296</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.391376</td>\n",
       "      <td>0.830986</td>\n",
       "      <td>0.386364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>0.530</td>\n",
       "      <td>0.398010</td>\n",
       "      <td>0.140845</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.396352</td>\n",
       "      <td>0.464789</td>\n",
       "      <td>0.613636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>0.800</td>\n",
       "      <td>0.514096</td>\n",
       "      <td>0.366197</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>184 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0        0.550     0.000000  0.373239  0.454545\n",
       "1        0.520     0.187396  0.422535  0.693182\n",
       "2        0.600     0.349917  0.387324  0.465909\n",
       "3        0.700     0.374793  0.830986  0.295455\n",
       "4        0.525     0.000000  0.352113  0.465909\n",
       "..         ...          ...       ...       ...\n",
       "179      0.575     0.000000  0.549296  0.352273\n",
       "180      0.600     0.391376  0.830986  0.386364\n",
       "181      0.530     0.398010  0.140845  0.295455\n",
       "182      0.550     0.396352  0.464789  0.613636\n",
       "183      0.800     0.514096  0.366197  0.522727\n",
       "\n",
       "[184 rows x 4 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fixing the x_test index\n",
    "\n",
    "fixed_x_test = x_test.reset_index()\n",
    "fixed_x_test = fixed_x_test.drop(['index'], axis = 1)\n",
    "\n",
    "# feature training data.\n",
    "fixed_x_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7cad001d",
   "metadata": {
    "papermill": {
     "duration": 0.008973,
     "end_time": "2025-10-18T20:31:33.220650",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.211677",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Visualization (Raw)\n",
    "In this section, the student visualise the raw data of each feature in the dataset with the use of a bar graph (using seaborn and the matplotlib.pyplot libraries)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f959f361",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.240342Z",
     "iopub.status.busy": "2025-10-18T20:31:33.240069Z",
     "iopub.status.idle": "2025-10-18T20:31:33.520356Z",
     "shell.execute_reply": "2025-10-18T20:31:33.519427Z"
    },
    "papermill": {
     "duration": 0.292329,
     "end_time": "2025-10-18T20:31:33.522004",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.229675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6,4))\n",
    "sns.histplot(data['Age'])\n",
    "plt.title('Age of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "48456e1e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.543765Z",
     "iopub.status.busy": "2025-10-18T20:31:33.543330Z",
     "iopub.status.idle": "2025-10-18T20:31:33.773978Z",
     "shell.execute_reply": "2025-10-18T20:31:33.772533Z"
    },
    "papermill": {
     "duration": 0.243813,
     "end_time": "2025-10-18T20:31:33.776031",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.532218",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['RestingBP'])\n",
    "plt.title('Resting Blood Pressure of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3b7f28e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:33.799213Z",
     "iopub.status.busy": "2025-10-18T20:31:33.798528Z",
     "iopub.status.idle": "2025-10-18T20:31:34.011058Z",
     "shell.execute_reply": "2025-10-18T20:31:34.009967Z"
    },
    "papermill": {
     "duration": 0.225034,
     "end_time": "2025-10-18T20:31:34.012925",
     "exception": false,
     "start_time": "2025-10-18T20:31:33.787891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(4,3))\n",
    "sns.histplot(data['Cholesterol'])\n",
    "plt.title('Cholesterol of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7fb1b104",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.036082Z",
     "iopub.status.busy": "2025-10-18T20:31:34.035768Z",
     "iopub.status.idle": "2025-10-18T20:31:34.234709Z",
     "shell.execute_reply": "2025-10-18T20:31:34.233448Z"
    },
    "papermill": {
     "duration": 0.21283,
     "end_time": "2025-10-18T20:31:34.236297",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.023467",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['MaxHR'])\n",
    "plt.title('Maximum Heart Rate of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4823eddb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.262467Z",
     "iopub.status.busy": "2025-10-18T20:31:34.261829Z",
     "iopub.status.idle": "2025-10-18T20:31:34.489940Z",
     "shell.execute_reply": "2025-10-18T20:31:34.489011Z"
    },
    "papermill": {
     "duration": 0.24166,
     "end_time": "2025-10-18T20:31:34.491479",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.249819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['Oldpeak'])\n",
    "plt.title('Exercise-induced ST (Sinus Tachycardia) segment depression relative to rest')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4718931e",
   "metadata": {
    "papermill": {
     "duration": 0.011609,
     "end_time": "2025-10-18T20:31:34.514418",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.502809",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "--------------------------------------------------------------------------------------\n",
    "## Experimenting with Various Types of Regressions \n",
    "In this section, the student used several regression algorithms to estimate future trends between the variables in identifying heart failure.\n",
    "### Linear Regression\n",
    "For this first experiment, the data will be examined using linear regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). First, set up every variable that will be used. Then split the training data with the test data (the difference being, training data is what is being used to train the model, while test data is how effective is the model) using sklearn \"train_test_split\" function. Then fit the training data inside a linear regression model. And using the test data the model can finally predict how each variable will affect each other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d2e21ca2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.537767Z",
     "iopub.status.busy": "2025-10-18T20:31:34.537442Z",
     "iopub.status.idle": "2025-10-18T20:31:34.573995Z",
     "shell.execute_reply": "2025-10-18T20:31:34.572930Z"
    },
    "papermill": {
     "duration": 0.050439,
     "end_time": "2025-10-18T20:31:34.575860",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.525421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Model Training with Linear Regression.\n",
    "model_1 = LinearRegression()\n",
    "model_1.fit(fixed_x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4c123aa2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.601051Z",
     "iopub.status.busy": "2025-10-18T20:31:34.600729Z",
     "iopub.status.idle": "2025-10-18T20:31:34.610958Z",
     "shell.execute_reply": "2025-10-18T20:31:34.609719Z"
    },
    "papermill": {
     "duration": 0.024317,
     "end_time": "2025-10-18T20:31:34.612559",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.588242",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 6.915169818533965\n",
      "Mean Squared Error (MSE): 70.80199699084974\n",
      "RÂ² Score: 0.23081905825761273\n"
     ]
    }
   ],
   "source": [
    "# Model Prediction.\n",
    "y_pred = model_1.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "07c0acb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.636427Z",
     "iopub.status.busy": "2025-10-18T20:31:34.636135Z",
     "iopub.status.idle": "2025-10-18T20:31:34.666224Z",
     "shell.execute_reply": "2025-10-18T20:31:34.665107Z"
    },
    "papermill": {
     "duration": 0.043949,
     "end_time": "2025-10-18T20:31:34.667950",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.624001",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.22625199 0.08444769 0.24297611 0.28437792 0.17827908]\n",
      "Mean CV Score: 0.2032665593584281\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_1, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3347fef7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.693606Z",
     "iopub.status.busy": "2025-10-18T20:31:34.692578Z",
     "iopub.status.idle": "2025-10-18T20:31:34.700391Z",
     "shell.execute_reply": "2025-10-18T20:31:34.699406Z"
    },
    "papermill": {
     "duration": 0.02216,
     "end_time": "2025-10-18T20:31:34.702080",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.679920",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([55.74648836, 56.79664279, 55.59622047, 47.98024689, 55.75369958,\n",
       "       51.08568679, 45.4660245 , 50.84425471, 55.25156538, 45.40593782,\n",
       "       55.84007191, 48.69204358, 53.28539579, 48.91162476, 59.47465215,\n",
       "       55.72672394, 54.13765348, 51.27780731, 52.08546625, 50.49196527,\n",
       "       54.09290019, 56.05303326, 52.88198203, 54.81108037, 47.97877701,\n",
       "       54.74831795, 47.64811605, 58.00930712, 53.04678385, 57.80761008,\n",
       "       56.50973682, 52.21850741, 56.81430624, 51.91515072, 57.83483877,\n",
       "       46.52633319, 56.4174434 , 59.83595959, 53.82170171, 50.27630846,\n",
       "       49.77433973, 49.37077733, 51.87288912, 50.95211175, 56.33470266,\n",
       "       58.30983764, 55.72114507, 55.36831169, 55.20094641, 49.9302574 ,\n",
       "       52.63231588, 53.16216785, 53.04372736, 47.21929466, 57.23520131,\n",
       "       59.48241115, 48.97441676, 56.30602786, 55.78870856, 49.57485076,\n",
       "       55.82721664, 49.16345866, 50.63717107, 55.23288196, 52.55175194,\n",
       "       45.94077141, 61.26555679, 50.12588035, 46.69811174, 50.20642347,\n",
       "       58.64285484, 50.47167724, 55.98113503, 53.12912261, 53.43211006,\n",
       "       67.49048988, 60.99113988, 49.45191672, 54.31145522, 46.49672805,\n",
       "       49.93593551, 47.02532597, 49.01440683, 58.55766969, 56.60310539,\n",
       "       53.29216494, 56.75076512, 54.89315236, 52.08821267, 59.70094729,\n",
       "       53.64913689, 56.59136094, 51.72833734, 51.97203684, 51.59526415,\n",
       "       51.27790538, 50.9407767 , 51.27525451, 52.22685911, 53.39735472,\n",
       "       54.71967136, 55.22846679, 54.27935425, 58.60910015, 50.17960209,\n",
       "       49.09754253, 53.91159205, 57.3965741 , 61.58147957, 49.81634112,\n",
       "       57.1654544 , 54.44212846, 56.77897298, 60.39810233, 56.56214557,\n",
       "       63.06461473, 54.80965977, 49.70661514, 43.51449121, 55.62713742,\n",
       "       49.11500308, 51.47385612, 51.79093351, 56.60819545, 57.36595095,\n",
       "       49.28245957, 57.54987677, 53.77684461, 55.55572403, 54.93036909,\n",
       "       56.87347129, 54.755241  , 56.37454044, 50.29941718, 55.13646676,\n",
       "       48.04626741, 49.82607751, 55.27789821, 59.26410509, 55.54483845,\n",
       "       52.53295895, 51.54240915, 60.76965146, 48.78205932, 52.84361449,\n",
       "       50.28216177, 58.50162655, 56.59132891, 52.35587379, 52.021525  ,\n",
       "       57.62648001, 56.19346538, 51.50107878, 59.6213008 , 55.4266973 ,\n",
       "       55.7656305 , 52.00263394, 63.37585308, 49.91059605, 49.18673971,\n",
       "       48.28651499, 58.11764042, 56.6786651 , 48.30800347, 54.06549486,\n",
       "       56.05527114, 55.50124549, 57.47659145, 48.54763718, 54.91824258,\n",
       "       49.56825765, 55.60240736, 46.87715787, 60.95194992, 55.33670233,\n",
       "       56.19239147, 57.98084979, 50.91449051, 56.9174635 , 52.03302869,\n",
       "       47.13342895, 56.03142925, 55.06444068, 60.05814294])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2af7bc04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:34.729925Z",
     "iopub.status.busy": "2025-10-18T20:31:34.729461Z",
     "iopub.status.idle": "2025-10-18T20:31:35.078757Z",
     "shell.execute_reply": "2025-10-18T20:31:35.077824Z"
    },
    "papermill": {
     "duration": 0.366228,
     "end_time": "2025-10-18T20:31:35.080477",
     "exception": false,
     "start_time": "2025-10-18T20:31:34.714249",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x78e6a436ac50>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d68719ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.107096Z",
     "iopub.status.busy": "2025-10-18T20:31:35.106756Z",
     "iopub.status.idle": "2025-10-18T20:31:35.113114Z",
     "shell.execute_reply": "2025-10-18T20:31:35.112173Z"
    },
    "papermill": {
     "duration": 0.021353,
     "end_time": "2025-10-18T20:31:35.114830",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.093477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Resting_BP_x_train = fixed_x_train[\"RestingBP\"]\n",
    "Cholesterol_x_train = fixed_x_train[\"Cholesterol\"]\n",
    "Max_HR_x_train = fixed_x_train[\"MaxHR\"]\n",
    "Oldpeak_x_train = fixed_x_train[\"Oldpeak\"]\n",
    "\n",
    "Resting_BP_x_test = x_test[\"RestingBP\"]\n",
    "Cholesterol_x_test = x_test[\"Cholesterol\"]\n",
    "Max_HR_x_test = x_test[\"MaxHR\"]\n",
    "Oldpeak_x_test = x_test[\"Oldpeak\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0913b991",
   "metadata": {
    "papermill": {
     "duration": 0.012841,
     "end_time": "2025-10-18T20:31:35.140217",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.127376",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Lasso Regression\n",
    "For the second experiment, the data will be examined using Lasso Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "879c108e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.167336Z",
     "iopub.status.busy": "2025-10-18T20:31:35.166547Z",
     "iopub.status.idle": "2025-10-18T20:31:35.180957Z",
     "shell.execute_reply": "2025-10-18T20:31:35.180011Z"
    },
    "papermill": {
     "duration": 0.029123,
     "end_time": "2025-10-18T20:31:35.182446",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.153323",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 6.939553175143172\n",
      "Mean Squared Error (MSE): 73.74266816586818\n",
      "RÂ² Score: 0.19887210308842873\n"
     ]
    }
   ],
   "source": [
    "model_2 = Lasso(alpha=0.1)\n",
    "model_2.fit(fixed_x_train, y_train)\n",
    "\n",
    "y_pred = model_2.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1523eb45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.209759Z",
     "iopub.status.busy": "2025-10-18T20:31:35.209403Z",
     "iopub.status.idle": "2025-10-18T20:31:35.238031Z",
     "shell.execute_reply": "2025-10-18T20:31:35.236681Z"
    },
    "papermill": {
     "duration": 0.044916,
     "end_time": "2025-10-18T20:31:35.240515",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.195599",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.19129937 0.10977519 0.21520828 0.23899207 0.1743642 ]\n",
      "Mean CV Score: 0.1859278233991502\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_2, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "8d12321a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.268119Z",
     "iopub.status.busy": "2025-10-18T20:31:35.267790Z",
     "iopub.status.idle": "2025-10-18T20:31:35.275055Z",
     "shell.execute_reply": "2025-10-18T20:31:35.274003Z"
    },
    "papermill": {
     "duration": 0.022404,
     "end_time": "2025-10-18T20:31:35.276503",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.254099",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([55.43591002, 56.1762705 , 55.75904138, 48.58084652, 55.61751412,\n",
       "       50.64904661, 47.33556828, 52.12180005, 54.27626058, 47.45347194,\n",
       "       55.15434716, 50.63565005, 53.10997093, 50.32609756, 57.35919238,\n",
       "       55.6048794 , 52.7180747 , 52.02456479, 54.12429196, 50.4722893 ,\n",
       "       54.87506178, 56.79012816, 52.18792222, 55.49042906, 49.56793975,\n",
       "       55.0590562 , 49.14148044, 57.62358955, 53.93964853, 56.58363718,\n",
       "       56.97437164, 52.24054967, 56.6596739 , 52.53077785, 55.86228521,\n",
       "       48.01224568, 54.8276116 , 58.24179588, 54.40734647, 51.58025875,\n",
       "       50.9193362 , 51.13690017, 52.30831769, 52.32734356, 55.04547402,\n",
       "       57.04228723, 55.22480395, 54.92056494, 53.6873706 , 50.11930813,\n",
       "       54.00733244, 52.37163556, 53.44567025, 48.75317104, 57.94214055,\n",
       "       57.69962295, 49.90269162, 55.85964583, 55.0472848 , 50.97305867,\n",
       "       55.36807523, 49.36115032, 51.53027069, 54.91324371, 52.12739462,\n",
       "       48.79995484, 58.87471143, 51.15809872, 48.53655452, 49.92483762,\n",
       "       58.2608885 , 51.54640812, 55.92857564, 54.57967099, 53.15193937,\n",
       "       63.01041262, 56.89959488, 51.15809872, 53.36487088, 47.68116145,\n",
       "       51.09102909, 48.53655452, 50.07501614, 57.89097334, 56.80120116,\n",
       "       53.49120816, 55.47809278, 55.87873845, 52.59268487, 57.80894542,\n",
       "       53.48636137, 55.38764861, 51.54282129, 50.34884046, 53.34335651,\n",
       "       52.12327764, 50.73469278, 51.38085732, 53.0178001 , 54.19813531,\n",
       "       55.27381254, 54.45934228, 53.71489685, 56.74246365, 51.15809872,\n",
       "       49.94947543, 54.32118421, 56.33348585, 60.07164745, 49.95648084,\n",
       "       56.43040529, 54.55705829, 56.69964925, 58.61101265, 56.6486009 ,\n",
       "       60.9267247 , 54.46488746, 50.05287014, 45.72296485, 55.10148802,\n",
       "       50.2744002 , 52.2537319 , 51.11622846, 56.06118852, 56.15040415,\n",
       "       50.70271969, 55.55686705, 53.79873555, 55.21750009, 54.56499379,\n",
       "       56.02813445, 55.05719602, 55.74796838, 50.4597387 , 56.20920841,\n",
       "       49.21962307, 50.6641872 , 54.25232116, 56.56929317, 54.92547849,\n",
       "       53.0369909 , 51.84116727, 59.37719009, 49.75009136, 52.12732786,\n",
       "       51.15809872, 57.82204353, 56.12591722, 52.72179505, 52.70715258,\n",
       "       55.88916245, 56.52921964, 52.2411813 , 58.52242865, 56.10963223,\n",
       "       55.68489957, 52.69656034, 60.97227997, 51.56254555, 49.82454898,\n",
       "       50.74184908, 56.81350269, 56.75690916, 50.65842769, 54.16795232,\n",
       "       54.96703293, 54.66646157, 56.9045785 , 49.75009136, 54.07538155,\n",
       "       49.98885388, 54.96025921, 47.71438045, 58.23070551, 56.20920841,\n",
       "       55.72427802, 56.31070822, 52.12623284, 56.22401581, 52.19657349,\n",
       "       48.3450392 , 57.64676713, 55.20906646, 58.3273265 ])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "096b3849",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.302937Z",
     "iopub.status.busy": "2025-10-18T20:31:35.302539Z",
     "iopub.status.idle": "2025-10-18T20:31:35.620009Z",
     "shell.execute_reply": "2025-10-18T20:31:35.619033Z"
    },
    "papermill": {
     "duration": 0.332459,
     "end_time": "2025-10-18T20:31:35.621642",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.289183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x78e6a1f7fd10>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae6fd98c",
   "metadata": {
    "papermill": {
     "duration": 0.012874,
     "end_time": "2025-10-18T20:31:35.647997",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.635123",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Ridge Regression\n",
    "For the third experiment, the data will be examined using Ridge Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5d58f567",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.676429Z",
     "iopub.status.busy": "2025-10-18T20:31:35.676151Z",
     "iopub.status.idle": "2025-10-18T20:31:35.690746Z",
     "shell.execute_reply": "2025-10-18T20:31:35.689730Z"
    },
    "papermill": {
     "duration": 0.030939,
     "end_time": "2025-10-18T20:31:35.692259",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.661320",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "Ridge(random_state=42)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_3 = Ridge(alpha=1.0, solver='auto', random_state=42)\n",
    "model_3.fit(fixed_x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "29463d8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.721486Z",
     "iopub.status.busy": "2025-10-18T20:31:35.721210Z",
     "iopub.status.idle": "2025-10-18T20:31:35.729883Z",
     "shell.execute_reply": "2025-10-18T20:31:35.728829Z"
    },
    "papermill": {
     "duration": 0.025097,
     "end_time": "2025-10-18T20:31:35.731464",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.706367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 6.904021707121374\n",
      "Mean Squared Error (MSE): 71.18999277121945\n",
      "RÂ² Score: 0.22660393760536024\n"
     ]
    }
   ],
   "source": [
    "y_pred = model_3.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1fbe4ba4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.760749Z",
     "iopub.status.busy": "2025-10-18T20:31:35.760275Z",
     "iopub.status.idle": "2025-10-18T20:31:35.788525Z",
     "shell.execute_reply": "2025-10-18T20:31:35.787240Z"
    },
    "papermill": {
     "duration": 0.045505,
     "end_time": "2025-10-18T20:31:35.790584",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.745079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.22147228 0.09579526 0.24123057 0.27651392 0.17904329]\n",
      "Mean CV Score: 0.20281106387651207\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_3, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "fa31df5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.822222Z",
     "iopub.status.busy": "2025-10-18T20:31:35.821900Z",
     "iopub.status.idle": "2025-10-18T20:31:35.829110Z",
     "shell.execute_reply": "2025-10-18T20:31:35.828272Z"
    },
    "papermill": {
     "duration": 0.024165,
     "end_time": "2025-10-18T20:31:35.830661",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.806496",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([55.86901194, 56.88459044, 55.63984336, 48.08240944, 55.92053162,\n",
       "       51.32708943, 45.90612844, 51.02025184, 55.20888085, 45.77314371,\n",
       "       55.66718799, 49.12633127, 53.28360205, 49.1286791 , 58.87251661,\n",
       "       55.71346474, 53.84990003, 51.38973853, 52.46485706, 50.47867202,\n",
       "       54.23399695, 56.04748578, 52.65119707, 54.83503032, 48.22181131,\n",
       "       54.98754852, 48.01193931, 57.87169884, 53.08253451, 57.50794563,\n",
       "       56.53889046, 52.17960926, 56.86263373, 51.99304714, 57.57084453,\n",
       "       46.87380927, 56.06121184, 59.40515872, 53.86831373, 50.46672093,\n",
       "       50.01840331, 49.80816381, 51.94441934, 51.1712794 , 56.15338217,\n",
       "       58.0331392 , 55.7253573 , 55.32285653, 55.00557843, 49.88908431,\n",
       "       52.589668  , 53.11263485, 53.01879798, 47.53294556, 57.27065496,\n",
       "       58.94197677, 48.96968834, 56.09708303, 55.78371665, 49.83785919,\n",
       "       55.72115425, 49.14127444, 50.6577549 , 55.15536761, 52.73200502,\n",
       "       46.46785737, 60.76311276, 50.271116  , 47.02990711, 50.06199859,\n",
       "       58.50046723, 50.67058078, 55.85764915, 53.3843443 , 53.29668126,\n",
       "       66.49497792, 60.10851204, 49.62552795, 54.3537866 , 46.77789464,\n",
       "       50.23762366, 47.34334479, 49.18744505, 58.34448997, 56.53048555,\n",
       "       53.24875284, 56.506918  , 54.98187369, 52.18793732, 59.4550547 ,\n",
       "       53.82577638, 56.48529301, 51.69248163, 51.96260536, 51.95480208,\n",
       "       51.46905897, 50.83256408, 51.37533969, 52.43908514, 53.68752094,\n",
       "       54.7436712 , 55.2647811 , 54.30773782, 58.29310668, 50.32257591,\n",
       "       49.24723616, 53.8646943 , 57.18464433, 61.0958783 , 49.91602155,\n",
       "       56.95155652, 54.35134824, 56.74909845, 59.77368014, 56.66500259,\n",
       "       62.51816616, 54.87285821, 49.93833547, 44.13689006, 55.4334803 ,\n",
       "       49.26965957, 51.57083317, 51.60068935, 56.58771328, 57.07728416,\n",
       "       49.5434339 , 57.19503892, 53.96430393, 55.59155528, 54.90940047,\n",
       "       56.71003438, 54.77394462, 56.42930699, 50.30472935, 55.22989322,\n",
       "       48.20095922, 50.05243703, 55.2310055 , 58.82269182, 55.38618018,\n",
       "       52.57764305, 51.50766255, 60.42497484, 48.95918197, 52.88226928,\n",
       "       50.42081757, 58.21902626, 56.40887966, 52.58360876, 52.18781466,\n",
       "       57.37877071, 56.35385836, 51.60740835, 59.38088727, 55.44787022,\n",
       "       55.84101595, 52.00761825, 62.87069323, 50.30447454, 49.36544022,\n",
       "       48.59133938, 58.0425552 , 56.77851568, 48.78565655, 54.07084759,\n",
       "       56.08298812, 55.2143661 , 57.41245033, 48.73462961, 54.80790841,\n",
       "       49.62825217, 55.53472644, 47.01056865, 60.45566043, 55.42169836,\n",
       "       56.1799284 , 57.7171242 , 51.1877733 , 56.74790301, 52.23510241,\n",
       "       47.42210037, 56.25352772, 55.17418655, 59.59269059])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2cd73b2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:35.859919Z",
     "iopub.status.busy": "2025-10-18T20:31:35.859575Z",
     "iopub.status.idle": "2025-10-18T20:31:36.175086Z",
     "shell.execute_reply": "2025-10-18T20:31:36.173787Z"
    },
    "papermill": {
     "duration": 0.332089,
     "end_time": "2025-10-18T20:31:36.176735",
     "exception": false,
     "start_time": "2025-10-18T20:31:35.844646",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x78e6a1f6bc50>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "209548c7",
   "metadata": {
    "papermill": {
     "duration": 0.016083,
     "end_time": "2025-10-18T20:31:36.208077",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.191994",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Decision Tree Regression\n",
    "For the fourth experiment, the data will be examined using Data Tree Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "c7f996f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:36.240771Z",
     "iopub.status.busy": "2025-10-18T20:31:36.240439Z",
     "iopub.status.idle": "2025-10-18T20:31:36.254370Z",
     "shell.execute_reply": "2025-10-18T20:31:36.253071Z"
    },
    "papermill": {
     "duration": 0.032759,
     "end_time": "2025-10-18T20:31:36.256127",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.223368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 9.032608695652174\n",
      "Mean Squared Error (MSE): 128.22826086956522\n",
      "RÂ² Score: -0.39305017719185886\n"
     ]
    }
   ],
   "source": [
    "model_4 = DecisionTreeRegressor(random_state=0)\n",
    "model_4.fit(fixed_x_train, y_train)\n",
    "\n",
    "y_pred = model_4.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "005eda46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:36.288214Z",
     "iopub.status.busy": "2025-10-18T20:31:36.287907Z",
     "iopub.status.idle": "2025-10-18T20:31:36.324938Z",
     "shell.execute_reply": "2025-10-18T20:31:36.323550Z"
    },
    "papermill": {
     "duration": 0.055457,
     "end_time": "2025-10-18T20:31:36.326694",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.271237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [-0.5040455  -0.71179761 -0.23813215 -0.31670666 -0.56877916]\n",
      "Mean CV Score: -0.467892214883925\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_4, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "de2880a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:36.360114Z",
     "iopub.status.busy": "2025-10-18T20:31:36.359813Z",
     "iopub.status.idle": "2025-10-18T20:31:36.366010Z",
     "shell.execute_reply": "2025-10-18T20:31:36.364697Z"
    },
    "papermill": {
     "duration": 0.024212,
     "end_time": "2025-10-18T20:31:36.367577",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.343365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[64. 51. 59. 42. 64. 58. 44. 42. 51. 41. 64. 62. 47. 66. 53. 54. 61. 43.\n",
      " 31. 57. 63. 54. 71. 46. 77. 64. 37. 52. 45. 48. 38. 62. 56. 60. 63. 35.\n",
      " 44. 48. 53. 40. 56. 46. 53. 55. 58. 65. 57. 41. 60. 29. 38. 38. 68. 44.\n",
      " 62. 57. 42. 58. 56. 54. 62. 52. 62. 64. 43. 54. 60. 58. 41. 54. 62. 49.\n",
      " 71. 51. 52. 39. 60. 64. 60. 39. 55. 43. 54. 56. 71. 57. 61. 59. 60. 58.\n",
      " 45. 56. 49. 41. 58. 47. 61. 51. 62. 53. 71. 35. 36. 67. 58. 49. 45. 56.\n",
      " 52. 60. 43. 57. 54. 58. 56. 52. 50. 54. 57. 68. 50. 58. 61. 48. 48. 52.\n",
      " 73. 43. 35. 59. 56. 54. 71. 60. 62. 47. 58. 51. 72. 59. 48. 55. 61. 56.\n",
      " 52. 58. 69. 42. 43. 46. 50. 59. 51. 59. 54. 58. 45. 55. 64. 37. 68. 62.\n",
      " 56. 31. 51. 45. 54. 56. 56. 66. 49. 59. 59. 56. 62. 53. 62. 64. 65. 50.\n",
      " 43. 62. 51. 70.]\n"
     ]
    }
   ],
   "source": [
    "# Predicted Data\n",
    "print(y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "5f95d43d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:36.401184Z",
     "iopub.status.busy": "2025-10-18T20:31:36.400888Z",
     "iopub.status.idle": "2025-10-18T20:31:36.721779Z",
     "shell.execute_reply": "2025-10-18T20:31:36.720765Z"
    },
    "papermill": {
     "duration": 0.34034,
     "end_time": "2025-10-18T20:31:36.723248",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.382908",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x78e6a0e25e50>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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5ptvcu2113LHHXfg6urKtm3bCAsLY9q0aYD6OZk1axb//ve/adeuHUFBQdx4443cfPPNtGrVioceeohJkybh6OjIF198QWBgIImJiaZ7DhgwAD8/P8aOHcszzzyDTqfj22+/NQsOqmv06NG88cYb/Prrr1x99dVm68507NiRtm3b8txzz3H69Gl8fHxYsGCB1b10Dz/8MO+88w4PP/wwvXv3Zv369Rw+fLjcce+88w5r1qyhb9++PPLII3Tu3JmMjAx27tzJqlWryMjIANTPcUhICFdffTXBwcEcOnSImTNnMmzYMLy9vWv8WohaUg8zcoSokHH64bZt2yo9buzYsZqnp2eF++fMmaP16tVLc3d317y9vbVu3bppzz//vHbmzBnTMSUlJdrrr7+uhYaGau7u7tr111+v7d+/X2vdunWlU3SN/vrrL+2mm27SvL29NU9PT6179+7aRx99ZNpfXFysPf3001pgYKCm0+nKTbe0ZxurkpGRobm6umqAdvDgwXL7f/vtN6179+6am5ubFhkZqb377rvaF198UW4qaNkpupqmaceOHdNiYmI0V1dXLTg4WJsyZYq2cuVKi6/Zrl27tDvuuEPz9/fXXF1dtdatW2v33HOPFhsbq2maphUUFGiTJk3SevToYXpde/TooX3yySdWP1dN07SPP/5YA7Q+ffpY3P/LL79oN998sxYUFKS5uLhorVq10h599FEtOTm5wmsuWLBAA7S5c+dWeMzatWs1QJsxY4Zp2xdffKFdccUVmqurq+bn56cNHDhQW7lypWl/SkqKNmzYMM3b21sDzF7fHTt2aH379jW18YMPPrA4RXfjxo1av379NHd3dy0sLEx7/vnntRUrVpT7P7B2im5pV111lQZY/D84ePCgFhMTo3l5eWkBAQHaI488ou3Zs6fc9FtL043z8vK0hx56SNPr9Zq3t7d2zz33aGlpaeWm6GqapqWmpmpPPvmkFhERoTk7O2shISHaoEGDtDlz5piO+fTTT7XrrrvO9LPVtm1bbdKkSVpmZqZNz1fULZ2m2SFcFkIIIYSwkeSECCGEEKJeSBAihBBCiHohQYgQQggh6oUEIUIIIYSoFxKECCGEEKJeSBAihBBCiHpR78XKPv74Y/7zn/+QkpJCjx49+Oijj+jTp0+Fx8+fP59XXnmFEydOEB0dzbvvvsvQoUPNjjl0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\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4541e5e6",
   "metadata": {
    "papermill": {
     "duration": 0.015587,
     "end_time": "2025-10-18T20:31:36.755349",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.739762",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Discussion of Results\n",
    "\n",
    "From the constant testing done, it seems the most likely age to be at risk of a heart failure is in your mid-fifties to sixties. From birth, it will keep rising then, continually drop near the end of one's fifties. Though, the data might not be extremely accurate due to the possibility that the patients who live past sixty years old die of natural causes (which is why there is a lower rate than those in their mid-fifties). Other than this, it could also be due to their lifestyle, and so forth. Another possibility is that the current model the student is using isn't as efficient as they would like to have as pointed out in their model validations which is the following:\n",
    "\n",
    "Regardless, there does seem to be an upward trend in how the longer one live, the higher their chances of getting a heart failure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4dc02425",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:31:36.789006Z",
     "iopub.status.busy": "2025-10-18T20:31:36.788659Z",
     "iopub.status.idle": "2025-10-18T20:31:36.796230Z",
     "shell.execute_reply": "2025-10-18T20:31:36.795173Z"
    },
    "papermill": {
     "duration": 0.026612,
     "end_time": "2025-10-18T20:31:36.798313",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.771701",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'First model (Linear Regression)\\nMean Absolute Error (MAE): 7.385736883877737\\n\\nMean Squared Error (MSE): 81.2562086920578\\n\\nRÂ² Score: 0.22769534266974178\\n\\nCross-Validation Scores: (0.19063422 0.16090571 0.27361999 0.26545888 0.08118323)\\nMean CV Score: 0.19436040594188364\\n\\n....................\\n\\nSecond model (Lasso Regression)\\n\\nMean Absolute Error (MAE): 7.503483560939664\\nMean Squared Error (MSE): 84.33026302558702\\nRÂ² Score: 0.19847780327323628\\n\\nCross-Validation Scores: (0.21239374 0.1530536  0.22719979 0.20330744 0.07693318)\\nMean CV Score: 0.1745775507157168\\n\\n....................\\n\\nThird Model (Ridge Regression)\\n\\nMean Absolute Error (MAE): 7.400232115521056\\nMean Squared Error (MSE): 81.75270135211616\\nRÂ² Score: 0.22297639749785314\\n\\nCross-Validation Scores: (0.19967374 0.16367696 0.26930703 0.25459058 0.08762054)\\nMean CV Score: 0.1949737688359554\\n\\n....................\\n\\nFourth Model (Decision Tree Regression)\\n\\nMean Absolute Error (MAE): 9.21195652173913\\nMean Squared Error (MSE): 127.27717391304348\\nRÂ² Score: -0.20971376547235487\\n\\nCross-Validation Scores: (-0.75011024 -0.57370505 -0.2772151  -0.69756523 -0.5951553)\\nMean CV Score: -0.578750183830927\\n\\nNOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better fit for the data.\\n'"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"First model (Linear Regression)\n",
    "Mean Absolute Error (MAE): 7.385736883877737\n",
    "\n",
    "Mean Squared Error (MSE): 81.2562086920578\n",
    "\n",
    "RÂ² Score: 0.22769534266974178\n",
    "\n",
    "Cross-Validation Scores: (0.19063422 0.16090571 0.27361999 0.26545888 0.08118323)\n",
    "Mean CV Score: 0.19436040594188364\n",
    "\n",
    "....................\n",
    "\n",
    "Second model (Lasso Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 7.503483560939664\n",
    "Mean Squared Error (MSE): 84.33026302558702\n",
    "RÂ² Score: 0.19847780327323628\n",
    "\n",
    "Cross-Validation Scores: (0.21239374 0.1530536  0.22719979 0.20330744 0.07693318)\n",
    "Mean CV Score: 0.1745775507157168\n",
    "\n",
    "....................\n",
    "\n",
    "Third Model (Ridge Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 7.400232115521056\n",
    "Mean Squared Error (MSE): 81.75270135211616\n",
    "RÂ² Score: 0.22297639749785314\n",
    "\n",
    "Cross-Validation Scores: (0.19967374 0.16367696 0.26930703 0.25459058 0.08762054)\n",
    "Mean CV Score: 0.1949737688359554\n",
    "\n",
    "....................\n",
    "\n",
    "Fourth Model (Decision Tree Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 9.21195652173913\n",
    "Mean Squared Error (MSE): 127.27717391304348\n",
    "RÂ² Score: -0.20971376547235487\n",
    "\n",
    "Cross-Validation Scores: (-0.75011024 -0.57370505 -0.2772151  -0.69756523 -0.5951553)\n",
    "Mean CV Score: -0.578750183830927\n",
    "\n",
    "NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better fit for the data.\n",
    "\"\"\"\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf2c8edc",
   "metadata": {
    "papermill": {
     "duration": 0.016228,
     "end_time": "2025-10-18T20:31:36.831875",
     "exception": false,
     "start_time": "2025-10-18T20:31:36.815647",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## References:\n",
    "- [https://pyquesthub.com/building-predictive-models-in-python-a-step-by-step-guide](https://pyquesthub.com/building-predictive-models-in-python-a-step-by-step-guide)\n",
    "- [https://www.pythontutorials.net/blog/lasso-sklearn/](https://www.pythontutorials.net/blog/lasso-sklearn/)\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1582403,
     "sourceId": 2603715,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31153,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 14.912945,
   "end_time": "2025-10-18T20:31:37.669731",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-10-18T20:31:22.756786",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
