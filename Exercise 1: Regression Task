{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ee8d06f6",
   "metadata": {
    "papermill": {
     "duration": 0.008594,
     "end_time": "2025-10-18T20:27:30.091717",
     "exception": false,
     "start_time": "2025-10-18T20:27:30.083123",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Assessment 1.1 - Regression Task\n",
    "-------------------------------------------------------------------------------------\n",
    "## Brief\n",
    "In this exercise, the student is tasked with finding/creating a suitable dataset for regression (one that has a continous numeric value) that has at least 500 records and 5 features. Afterwards, they must explain and demonstrate their knowledge in machine learning by applying 1 or more regression algorithms (e.g., Linear Regression, Ridge/Lasso Regression, Decision Tree Regression) to their selected dataset. Clearly explaining each process from the start to the finish. Then, they need to evaluate how accurate their model is using appropriate evaluation metrics (Mean Absolute Error (MAE), Mean Squared Error (MSE), RÂ² score.). Finally, they have to create a visualization of their graphs and write a reflection on the whole activity (300 to 500 words). \n",
    "\n",
    "-------------------------------------------------------------------------------------\n",
    "\n",
    "## Setup\n",
    "For this activity, the student chose to work on a dataset on predicting heart failure containing 918 records with the following variables:\n",
    "1. Age\n",
    "2. Sex\n",
    "3. Chest Pain Type\n",
    "4. Resting BP (Resting Blood Pressure) \n",
    "5. Cholesterol\n",
    "6. Fasting BS (Fasting Blood Sugar)\n",
    "7. Resting ECG (Resting Electrocardiogram)\n",
    "8. Max HR (Maximum Heart Rate)\n",
    "9. Exercise Angina\n",
    "10. Oldpeak (An exercise induced heart rate relative to rest)\n",
    "11. ST Slope (The slope that assess the heart's response to stress)\n",
    "12. Heart Disease\n",
    "\n",
    "First, thing you have to do is import every required library that you will be using in Kaggle's python language. Second, you must find the csv (comma separated values) file in Kaggle using the add input/upload button on the right side of your screen. Third, you print the data, this should show the first and last 5 records of your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ccaca84a",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:30.109112Z",
     "iopub.status.busy": "2025-10-18T20:27:30.108272Z",
     "iopub.status.idle": "2025-10-18T20:27:35.004138Z",
     "shell.execute_reply": "2025-10-18T20:27:35.002762Z"
    },
    "papermill": {
     "duration": 4.906442,
     "end_time": "2025-10-18T20:27:35.006077",
     "exception": false,
     "start_time": "2025-10-18T20:27:30.099635",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
      "0     40   M           ATA        140          289          0     Normal   \n",
      "1     49   F           NAP        160          180          0     Normal   \n",
      "2     37   M           ATA        130          283          0         ST   \n",
      "3     48   F           ASY        138          214          0     Normal   \n",
      "4     54   M           NAP        150          195          0     Normal   \n",
      "..   ...  ..           ...        ...          ...        ...        ...   \n",
      "913   45   M            TA        110          264          0     Normal   \n",
      "914   68   M           ASY        144          193          1     Normal   \n",
      "915   57   M           ASY        130          131          0     Normal   \n",
      "916   57   F           ATA        130          236          0        LVH   \n",
      "917   38   M           NAP        138          175          0     Normal   \n",
      "\n",
      "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
      "0      172              N      0.0       Up             0  \n",
      "1      156              N      1.0     Flat             1  \n",
      "2       98              N      0.0       Up             0  \n",
      "3      108              Y      1.5     Flat             1  \n",
      "4      122              N      0.0       Up             0  \n",
      "..     ...            ...      ...      ...           ...  \n",
      "913    132              N      1.2     Flat             1  \n",
      "914    141              N      3.4     Flat             1  \n",
      "915    115              Y      1.2     Flat             1  \n",
      "916    174              N      0.0     Flat             1  \n",
      "917    173              N      0.0       Up             0  \n",
      "\n",
      "[918 rows x 12 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "import sklearn\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import RepeatedKFold\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.linear_model import Ridge, Lasso\n",
    "from sklearn.linear_model import RidgeCV\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.tree import export_graphviz\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "data = pd.read_csv(\"/kaggle/input/heart-failure-prediction/heart.csv\")\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8af4b2d9",
   "metadata": {
    "papermill": {
     "duration": 0.007159,
     "end_time": "2025-10-18T20:27:35.021075",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.013916",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Record Samples\n",
    "In this section, the student demonstrated how one could use the \".head\" and \".tail\" function in the pandas library, allowing the user to see a specify number of records inside the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ec50f1f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.038734Z",
     "iopub.status.busy": "2025-10-18T20:27:35.038355Z",
     "iopub.status.idle": "2025-10-18T20:27:35.059838Z",
     "shell.execute_reply": "2025-10-18T20:27:35.058755Z"
    },
    "papermill": {
     "duration": 0.03307,
     "end_time": "2025-10-18T20:27:35.061567",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.028497",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>140</td>\n",
       "      <td>289</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>172</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>F</td>\n",
       "      <td>NAP</td>\n",
       "      <td>160</td>\n",
       "      <td>180</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>156</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>283</td>\n",
       "      <td>0</td>\n",
       "      <td>ST</td>\n",
       "      <td>98</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>138</td>\n",
       "      <td>214</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>108</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>122</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>39</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>120</td>\n",
       "      <td>339</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>45</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>237</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>170</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>54</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>110</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>142</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>207</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>130</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.5</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>284</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>120</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n",
       "0   40   M           ATA        140          289          0     Normal    172   \n",
       "1   49   F           NAP        160          180          0     Normal    156   \n",
       "2   37   M           ATA        130          283          0         ST     98   \n",
       "3   48   F           ASY        138          214          0     Normal    108   \n",
       "4   54   M           NAP        150          195          0     Normal    122   \n",
       "5   39   M           NAP        120          339          0     Normal    170   \n",
       "6   45   F           ATA        130          237          0     Normal    170   \n",
       "7   54   M           ATA        110          208          0     Normal    142   \n",
       "8   37   M           ASY        140          207          0     Normal    130   \n",
       "9   48   F           ATA        120          284          0     Normal    120   \n",
       "\n",
       "  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "0              N      0.0       Up             0  \n",
       "1              N      1.0     Flat             1  \n",
       "2              N      0.0       Up             0  \n",
       "3              Y      1.5     Flat             1  \n",
       "4              N      0.0       Up             0  \n",
       "5              N      0.0       Up             0  \n",
       "6              N      0.0       Up             0  \n",
       "7              N      0.0       Up             0  \n",
       "8              Y      1.5     Flat             1  \n",
       "9              N      0.0       Up             0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "585a5b95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.079539Z",
     "iopub.status.busy": "2025-10-18T20:27:35.079245Z",
     "iopub.status.idle": "2025-10-18T20:27:35.093814Z",
     "shell.execute_reply": "2025-10-18T20:27:35.092828Z"
    },
    "papermill": {
     "duration": 0.025514,
     "end_time": "2025-10-18T20:27:35.095260",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.069746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>ChestPainType</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>RestingECG</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>ExerciseAngina</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>ST_Slope</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>908</th>\n",
       "      <td>63</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>144</td>\n",
       "      <td>Y</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>63</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>124</td>\n",
       "      <td>197</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>136</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>910</th>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>ATA</td>\n",
       "      <td>120</td>\n",
       "      <td>157</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>182</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>164</td>\n",
       "      <td>176</td>\n",
       "      <td>1</td>\n",
       "      <td>LVH</td>\n",
       "      <td>90</td>\n",
       "      <td>N</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>912</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ASY</td>\n",
       "      <td>140</td>\n",
       "      <td>241</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>123</td>\n",
       "      <td>Y</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>45</td>\n",
       "      <td>M</td>\n",
       "      <td>TA</td>\n",
       "      <td>110</td>\n",
       "      <td>264</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>132</td>\n",
       "      <td>N</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>914</th>\n",
       "      <td>68</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>144</td>\n",
       "      <td>193</td>\n",
       "      <td>1</td>\n",
       "      <td>Normal</td>\n",
       "      <td>141</td>\n",
       "      <td>N</td>\n",
       "      <td>3.4</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>ASY</td>\n",
       "      <td>130</td>\n",
       "      <td>131</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>115</td>\n",
       "      <td>Y</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>57</td>\n",
       "      <td>F</td>\n",
       "      <td>ATA</td>\n",
       "      <td>130</td>\n",
       "      <td>236</td>\n",
       "      <td>0</td>\n",
       "      <td>LVH</td>\n",
       "      <td>174</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Flat</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>38</td>\n",
       "      <td>M</td>\n",
       "      <td>NAP</td>\n",
       "      <td>138</td>\n",
       "      <td>175</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>173</td>\n",
       "      <td>N</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Up</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
       "908   63   M           ASY        140          187          0        LVH   \n",
       "909   63   F           ASY        124          197          0     Normal   \n",
       "910   41   M           ATA        120          157          0     Normal   \n",
       "911   59   M           ASY        164          176          1        LVH   \n",
       "912   57   F           ASY        140          241          0     Normal   \n",
       "913   45   M            TA        110          264          0     Normal   \n",
       "914   68   M           ASY        144          193          1     Normal   \n",
       "915   57   M           ASY        130          131          0     Normal   \n",
       "916   57   F           ATA        130          236          0        LVH   \n",
       "917   38   M           NAP        138          175          0     Normal   \n",
       "\n",
       "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
       "908    144              Y      4.0       Up             1  \n",
       "909    136              Y      0.0     Flat             1  \n",
       "910    182              N      0.0       Up             0  \n",
       "911     90              N      1.0     Flat             1  \n",
       "912    123              Y      0.2     Flat             1  \n",
       "913    132              N      1.2     Flat             1  \n",
       "914    141              N      3.4     Flat             1  \n",
       "915    115              Y      1.2     Flat             1  \n",
       "916    174              N      0.0     Flat             1  \n",
       "917    173              N      0.0       Up             0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00484642",
   "metadata": {
    "papermill": {
     "duration": 0.008442,
     "end_time": "2025-10-18T20:27:35.111996",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.103554",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Information on Dataset\n",
    "In this section, the student gathers the necessary information on the data set, this includes using the \".info\" function to see the amount of data are in one feature, the types of data, and the memory usage. \".shape\" on the other hand, shows the user the amount of rows and columns are in the data set. \".describe\" provides the user statistics on the dataset such as the average across all data (mean), the minimum and maximum value of data sets, and the standard deviation of the data (std)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "890d23f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.129411Z",
     "iopub.status.busy": "2025-10-18T20:27:35.129050Z",
     "iopub.status.idle": "2025-10-18T20:27:35.157088Z",
     "shell.execute_reply": "2025-10-18T20:27:35.155649Z"
    },
    "papermill": {
     "duration": 0.038664,
     "end_time": "2025-10-18T20:27:35.158636",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.119972",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 918 entries, 0 to 917\n",
      "Data columns (total 12 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   Age             918 non-null    int64  \n",
      " 1   Sex             918 non-null    object \n",
      " 2   ChestPainType   918 non-null    object \n",
      " 3   RestingBP       918 non-null    int64  \n",
      " 4   Cholesterol     918 non-null    int64  \n",
      " 5   FastingBS       918 non-null    int64  \n",
      " 6   RestingECG      918 non-null    object \n",
      " 7   MaxHR           918 non-null    int64  \n",
      " 8   ExerciseAngina  918 non-null    object \n",
      " 9   Oldpeak         918 non-null    float64\n",
      " 10  ST_Slope        918 non-null    object \n",
      " 11  HeartDisease    918 non-null    int64  \n",
      "dtypes: float64(1), int64(6), object(5)\n",
      "memory usage: 86.2+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7b410b40",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.177240Z",
     "iopub.status.busy": "2025-10-18T20:27:35.176133Z",
     "iopub.status.idle": "2025-10-18T20:27:35.182799Z",
     "shell.execute_reply": "2025-10-18T20:27:35.181738Z"
    },
    "papermill": {
     "duration": 0.017339,
     "end_time": "2025-10-18T20:27:35.184314",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.166975",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(918, 12)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "43753f2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.203451Z",
     "iopub.status.busy": "2025-10-18T20:27:35.203123Z",
     "iopub.status.idle": "2025-10-18T20:27:35.230015Z",
     "shell.execute_reply": "2025-10-18T20:27:35.229135Z"
    },
    "papermill": {
     "duration": 0.037896,
     "end_time": "2025-10-18T20:27:35.231523",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.193627",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FastingBS</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "      <th>HeartDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "      <td>918.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>53.510893</td>\n",
       "      <td>132.396514</td>\n",
       "      <td>198.799564</td>\n",
       "      <td>0.233115</td>\n",
       "      <td>136.809368</td>\n",
       "      <td>0.887364</td>\n",
       "      <td>0.553377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.432617</td>\n",
       "      <td>18.514154</td>\n",
       "      <td>109.384145</td>\n",
       "      <td>0.423046</td>\n",
       "      <td>25.460334</td>\n",
       "      <td>1.066570</td>\n",
       "      <td>0.497414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>-2.600000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>173.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>130.000000</td>\n",
       "      <td>223.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>138.000000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>267.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>77.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>603.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>202.000000</td>\n",
       "      <td>6.200000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age   RestingBP  Cholesterol   FastingBS       MaxHR  \\\n",
       "count  918.000000  918.000000   918.000000  918.000000  918.000000   \n",
       "mean    53.510893  132.396514   198.799564    0.233115  136.809368   \n",
       "std      9.432617   18.514154   109.384145    0.423046   25.460334   \n",
       "min     28.000000    0.000000     0.000000    0.000000   60.000000   \n",
       "25%     47.000000  120.000000   173.250000    0.000000  120.000000   \n",
       "50%     54.000000  130.000000   223.000000    0.000000  138.000000   \n",
       "75%     60.000000  140.000000   267.000000    0.000000  156.000000   \n",
       "max     77.000000  200.000000   603.000000    1.000000  202.000000   \n",
       "\n",
       "          Oldpeak  HeartDisease  \n",
       "count  918.000000    918.000000  \n",
       "mean     0.887364      0.553377  \n",
       "std      1.066570      0.497414  \n",
       "min     -2.600000      0.000000  \n",
       "25%      0.000000      0.000000  \n",
       "50%      0.600000      1.000000  \n",
       "75%      1.500000      1.000000  \n",
       "max      6.200000      1.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab4c1c62",
   "metadata": {
    "papermill": {
     "duration": 0.008318,
     "end_time": "2025-10-18T20:27:35.249969",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.241651",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing\n",
    "In this section, the data is being checked if there is any missing values / unneccessary data that can be removed before training the model. This includes handling missing values, scaling, encoding, and variable setting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bde73ee2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.267738Z",
     "iopub.status.busy": "2025-10-18T20:27:35.267385Z",
     "iopub.status.idle": "2025-10-18T20:27:35.276345Z",
     "shell.execute_reply": "2025-10-18T20:27:35.275152Z"
    },
    "papermill": {
     "duration": 0.020098,
     "end_time": "2025-10-18T20:27:35.278277",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.258179",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age               0\n",
       "Sex               0\n",
       "ChestPainType     0\n",
       "RestingBP         0\n",
       "Cholesterol       0\n",
       "FastingBS         0\n",
       "RestingECG        0\n",
       "MaxHR             0\n",
       "ExerciseAngina    0\n",
       "Oldpeak           0\n",
       "ST_Slope          0\n",
       "HeartDisease      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checks each feature if there is any null/empty values.\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e0ea7678",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.297174Z",
     "iopub.status.busy": "2025-10-18T20:27:35.296867Z",
     "iopub.status.idle": "2025-10-18T20:27:35.302565Z",
     "shell.execute_reply": "2025-10-18T20:27:35.301642Z"
    },
    "papermill": {
     "duration": 0.016824,
     "end_time": "2025-10-18T20:27:35.304280",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.287456",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Removes null/empty values.\n",
    "data = data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9a5173d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.323515Z",
     "iopub.status.busy": "2025-10-18T20:27:35.323179Z",
     "iopub.status.idle": "2025-10-18T20:27:35.329428Z",
     "shell.execute_reply": "2025-10-18T20:27:35.328537Z"
    },
    "papermill": {
     "duration": 0.017487,
     "end_time": "2025-10-18T20:27:35.331138",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.313651",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Drops any unneccessary features that won't be used inside the model.\n",
    "data = data.drop(['Sex', 'ChestPainType', 'RestingECG', 'FastingBS', 'ExerciseAngina', 'ST_Slope', 'HeartDisease'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8bc897cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.349558Z",
     "iopub.status.busy": "2025-10-18T20:27:35.349272Z",
     "iopub.status.idle": "2025-10-18T20:27:35.365189Z",
     "shell.execute_reply": "2025-10-18T20:27:35.364104Z"
    },
    "papermill": {
     "duration": 0.02697,
     "end_time": "2025-10-18T20:27:35.366814",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.339844",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>0.70</td>\n",
       "      <td>0.479270</td>\n",
       "      <td>0.788732</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.298507</td>\n",
       "      <td>0.676056</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.469320</td>\n",
       "      <td>0.267606</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>0.69</td>\n",
       "      <td>0.354892</td>\n",
       "      <td>0.338028</td>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.323383</td>\n",
       "      <td>0.436620</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0   40       0.70     0.479270  0.788732  0.295455\n",
       "1   49       0.80     0.298507  0.676056  0.409091\n",
       "2   37       0.65     0.469320  0.267606  0.295455\n",
       "3   48       0.69     0.354892  0.338028  0.465909\n",
       "4   54       0.75     0.323383  0.436620  0.295455"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Scale each numeric data to fit each other.\n",
    "scaler = MinMaxScaler()\n",
    "data[data.columns[1:]] = scaler.fit_transform(data[data.columns[1:]])\n",
    "\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fa4e1c5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.385740Z",
     "iopub.status.busy": "2025-10-18T20:27:35.385305Z",
     "iopub.status.idle": "2025-10-18T20:27:35.393820Z",
     "shell.execute_reply": "2025-10-18T20:27:35.392822Z"
    },
    "papermill": {
     "duration": 0.019958,
     "end_time": "2025-10-18T20:27:35.395400",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.375442",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Feature Selection.\n",
    "x = data[['RestingBP', 'Cholesterol', 'MaxHR', 'Oldpeak']]      # Feature\n",
    "y = data['Age']                                                 # Target\n",
    "\n",
    "# Splitting the data.\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, train_size = 0.8, test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6b93854e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.413886Z",
     "iopub.status.busy": "2025-10-18T20:27:35.413468Z",
     "iopub.status.idle": "2025-10-18T20:27:35.425873Z",
     "shell.execute_reply": "2025-10-18T20:27:35.424909Z"
    },
    "papermill": {
     "duration": 0.023446,
     "end_time": "2025-10-18T20:27:35.427522",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.404076",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>460</th>\n",
       "      <td>0.695</td>\n",
       "      <td>0.459370</td>\n",
       "      <td>0.408451</td>\n",
       "      <td>0.511364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.328358</td>\n",
       "      <td>0.669014</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.379768</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>824</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.414594</td>\n",
       "      <td>0.894366</td>\n",
       "      <td>0.693182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.562189</td>\n",
       "      <td>0.774648</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>679</th>\n",
       "      <td>0.725</td>\n",
       "      <td>0.386401</td>\n",
       "      <td>0.633803</td>\n",
       "      <td>0.556818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>405</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.492958</td>\n",
       "      <td>0.431818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>735</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.311774</td>\n",
       "      <td>0.556338</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>0.860</td>\n",
       "      <td>0.431177</td>\n",
       "      <td>0.091549</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.281690</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>734 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "460      0.695     0.459370  0.408451  0.511364\n",
       "146      0.600     0.328358  0.669014  0.295455\n",
       "89       0.700     0.379768  0.352113  0.352273\n",
       "824      0.650     0.414594  0.894366  0.693182\n",
       "5        0.600     0.562189  0.774648  0.295455\n",
       "..         ...          ...       ...       ...\n",
       "679      0.725     0.386401  0.633803  0.556818\n",
       "405      0.600     0.000000  0.492958  0.431818\n",
       "735      0.600     0.311774  0.556338  0.522727\n",
       "550      0.860     0.431177  0.091549  0.522727\n",
       "353      0.650     0.000000  0.281690  0.409091\n",
       "\n",
       "[734 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Showing off x_train.\n",
    "x_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3c6016d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.447019Z",
     "iopub.status.busy": "2025-10-18T20:27:35.446647Z",
     "iopub.status.idle": "2025-10-18T20:27:35.459217Z",
     "shell.execute_reply": "2025-10-18T20:27:35.458193Z"
    },
    "papermill": {
     "duration": 0.023977,
     "end_time": "2025-10-18T20:27:35.460718",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.436741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>767</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.442786</td>\n",
       "      <td>0.753521</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>457</th>\n",
       "      <td>0.625</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.739437</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.459370</td>\n",
       "      <td>0.704225</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>802</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.386401</td>\n",
       "      <td>0.612676</td>\n",
       "      <td>0.306818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>0.800</td>\n",
       "      <td>0.588723</td>\n",
       "      <td>0.274648</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>790</th>\n",
       "      <td>0.690</td>\n",
       "      <td>0.487562</td>\n",
       "      <td>0.323944</td>\n",
       "      <td>0.511364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>0.650</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.457746</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.494196</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>465</th>\n",
       "      <td>0.670</td>\n",
       "      <td>0.398010</td>\n",
       "      <td>0.704225</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.464345</td>\n",
       "      <td>0.633803</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>184 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "767      0.540     0.442786  0.753521  0.295455\n",
       "457      0.625     0.000000  0.739437  0.295455\n",
       "80       0.550     0.459370  0.704225  0.295455\n",
       "802      0.540     0.386401  0.612676  0.306818\n",
       "238      0.800     0.588723  0.274648  0.522727\n",
       "..         ...          ...       ...       ...\n",
       "790      0.690     0.487562  0.323944  0.511364\n",
       "149      0.650     1.000000  0.457746  0.409091\n",
       "266      0.650     0.494196  0.352113  0.409091\n",
       "465      0.670     0.398010  0.704225  0.295455\n",
       "216      0.550     0.464345  0.633803  0.295455\n",
       "\n",
       "[184 rows x 4 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Showing off x_test.\n",
    "x_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fe309386",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.480036Z",
     "iopub.status.busy": "2025-10-18T20:27:35.479723Z",
     "iopub.status.idle": "2025-10-18T20:27:35.494683Z",
     "shell.execute_reply": "2025-10-18T20:27:35.493870Z"
    },
    "papermill": {
     "duration": 0.02643,
     "end_time": "2025-10-18T20:27:35.496360",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.469930",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.695</td>\n",
       "      <td>0.459370</td>\n",
       "      <td>0.408451</td>\n",
       "      <td>0.511364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.328358</td>\n",
       "      <td>0.669014</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.700</td>\n",
       "      <td>0.379768</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.352273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.414594</td>\n",
       "      <td>0.894366</td>\n",
       "      <td>0.693182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.562189</td>\n",
       "      <td>0.774648</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>729</th>\n",
       "      <td>0.725</td>\n",
       "      <td>0.386401</td>\n",
       "      <td>0.633803</td>\n",
       "      <td>0.556818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>730</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.492958</td>\n",
       "      <td>0.431818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>731</th>\n",
       "      <td>0.600</td>\n",
       "      <td>0.311774</td>\n",
       "      <td>0.556338</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>0.860</td>\n",
       "      <td>0.431177</td>\n",
       "      <td>0.091549</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.281690</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>734 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0        0.695     0.459370  0.408451  0.511364\n",
       "1        0.600     0.328358  0.669014  0.295455\n",
       "2        0.700     0.379768  0.352113  0.352273\n",
       "3        0.650     0.414594  0.894366  0.693182\n",
       "4        0.600     0.562189  0.774648  0.295455\n",
       "..         ...          ...       ...       ...\n",
       "729      0.725     0.386401  0.633803  0.556818\n",
       "730      0.600     0.000000  0.492958  0.431818\n",
       "731      0.600     0.311774  0.556338  0.522727\n",
       "732      0.860     0.431177  0.091549  0.522727\n",
       "733      0.650     0.000000  0.281690  0.409091\n",
       "\n",
       "[734 rows x 4 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fixing the x_train index\n",
    "\n",
    "fixed_x_train = x_train.reset_index()\n",
    "fixed_x_train = fixed_x_train.drop(['index'], axis = 1)\n",
    "fixed_x_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5debb3ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.516163Z",
     "iopub.status.busy": "2025-10-18T20:27:35.515844Z",
     "iopub.status.idle": "2025-10-18T20:27:35.529475Z",
     "shell.execute_reply": "2025-10-18T20:27:35.528548Z"
    },
    "papermill": {
     "duration": 0.025264,
     "end_time": "2025-10-18T20:27:35.531114",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.505850",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RestingBP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>MaxHR</th>\n",
       "      <th>Oldpeak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.442786</td>\n",
       "      <td>0.753521</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.625</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.739437</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.459370</td>\n",
       "      <td>0.704225</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.540</td>\n",
       "      <td>0.386401</td>\n",
       "      <td>0.612676</td>\n",
       "      <td>0.306818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.800</td>\n",
       "      <td>0.588723</td>\n",
       "      <td>0.274648</td>\n",
       "      <td>0.522727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>0.690</td>\n",
       "      <td>0.487562</td>\n",
       "      <td>0.323944</td>\n",
       "      <td>0.511364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>0.650</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.457746</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>0.650</td>\n",
       "      <td>0.494196</td>\n",
       "      <td>0.352113</td>\n",
       "      <td>0.409091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>0.670</td>\n",
       "      <td>0.398010</td>\n",
       "      <td>0.704225</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>0.550</td>\n",
       "      <td>0.464345</td>\n",
       "      <td>0.633803</td>\n",
       "      <td>0.295455</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>184 rows Ã 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RestingBP  Cholesterol     MaxHR   Oldpeak\n",
       "0        0.540     0.442786  0.753521  0.295455\n",
       "1        0.625     0.000000  0.739437  0.295455\n",
       "2        0.550     0.459370  0.704225  0.295455\n",
       "3        0.540     0.386401  0.612676  0.306818\n",
       "4        0.800     0.588723  0.274648  0.522727\n",
       "..         ...          ...       ...       ...\n",
       "179      0.690     0.487562  0.323944  0.511364\n",
       "180      0.650     1.000000  0.457746  0.409091\n",
       "181      0.650     0.494196  0.352113  0.409091\n",
       "182      0.670     0.398010  0.704225  0.295455\n",
       "183      0.550     0.464345  0.633803  0.295455\n",
       "\n",
       "[184 rows x 4 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fixing the x_test index\n",
    "\n",
    "fixed_x_test = x_test.reset_index()\n",
    "fixed_x_test = fixed_x_test.drop(['index'], axis = 1)\n",
    "\n",
    "# feature training data.\n",
    "fixed_x_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ee86013",
   "metadata": {
    "papermill": {
     "duration": 0.009081,
     "end_time": "2025-10-18T20:27:35.550509",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.541428",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Visualization (Raw)\n",
    "In this section, the student visualise the raw data of each feature in the dataset with the use of a bar graph (using seaborn and the matplotlib.pyplot libraries)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6fd749d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.570633Z",
     "iopub.status.busy": "2025-10-18T20:27:35.570305Z",
     "iopub.status.idle": "2025-10-18T20:27:35.870965Z",
     "shell.execute_reply": "2025-10-18T20:27:35.869963Z"
    },
    "papermill": {
     "duration": 0.312751,
     "end_time": "2025-10-18T20:27:35.872672",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.559921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6,4))\n",
    "sns.histplot(data['Age'])\n",
    "plt.title('Age of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f1f11433",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:35.894663Z",
     "iopub.status.busy": "2025-10-18T20:27:35.893633Z",
     "iopub.status.idle": "2025-10-18T20:27:36.137138Z",
     "shell.execute_reply": "2025-10-18T20:27:36.136062Z"
    },
    "papermill": {
     "duration": 0.255998,
     "end_time": "2025-10-18T20:27:36.138750",
     "exception": false,
     "start_time": "2025-10-18T20:27:35.882752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['RestingBP'])\n",
    "plt.title('Resting Blood Pressure of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e755e922",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:36.161613Z",
     "iopub.status.busy": "2025-10-18T20:27:36.160721Z",
     "iopub.status.idle": "2025-10-18T20:27:36.384497Z",
     "shell.execute_reply": "2025-10-18T20:27:36.383580Z"
    },
    "papermill": {
     "duration": 0.2369,
     "end_time": "2025-10-18T20:27:36.386049",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.149149",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(4,3))\n",
    "sns.histplot(data['Cholesterol'])\n",
    "plt.title('Cholesterol of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "61905708",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:36.409856Z",
     "iopub.status.busy": "2025-10-18T20:27:36.409420Z",
     "iopub.status.idle": "2025-10-18T20:27:36.610794Z",
     "shell.execute_reply": "2025-10-18T20:27:36.609791Z"
    },
    "papermill": {
     "duration": 0.21608,
     "end_time": "2025-10-18T20:27:36.612521",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.396441",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAc8AAAGJCAYAAADsebhaAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAAA9hAAAPYQGoP6dpAAA43klEQVR4nO3deVxU5d8//teAMqBsskOCkJqgZpYL4r6guGZuycflg0tqiZryrZRcUHPXjFTUNEXzlii3Mrduxa0S0VxKE7cEcWFxVBgEZL1+f/jj3I6AcoaBGeD1fDzmkXOd61zznqthXnPOnHNGIYQQICIiolIz0ncBRERElQ3Dk4iISCaGJxERkUwMTyIiIpkYnkRERDIxPImIiGRieBIREcnE8CQiIpKJ4UlERCQTw5P0SqFQYO7cufoug6qZ5ORkDB48GLa2tlAoFAgNDdV3SfxbqGQYntXQli1boFAooFAo8PvvvxdZLoSAq6srFAoF+vbtq4cKK6/4+HgoFAqsWLGi2OVz586FQqGASqWq4MqeOXXqFObOnYvU1NRS9R81apT0WlEoFFAqlXjjjTcwZ84cPH36VKsarly5grlz5yI+Pl6r9XVh2rRp+PXXXxEcHIxt27ahZ8+eJfZ9/vkbGRnBxcUFPXr0wPHjx2U/7oEDB/QakBEREQbxQaEqqKHvAkh/TE1NERERgfbt22u0nzhxAnfv3oVSqSz3GrKyslCjBl+GFeXUqVOYN28eRo0aBWtr61Kto1Qq8e233wIA0tLS8PPPP+OLL77Av//+i+3bt8uu4cqVK5g3bx46d+4Md3d32evrwtGjR9G/f3988sknperfvXt3/Pe//4UQAnFxcVi7di26du2K/fv3o1evXqV+3AMHDiAsLKzYAK2Iv4WIiAhcvnwZU6dOLdfHqQ74rlWN9e7dGzt27MCqVas0/mgjIiLQokWLCtk6MjU1LffHICAjIwO1a9fWat0aNWpgxIgR0v2JEyeibdu2+P7777Fy5Uo4OjrqqswKk5KSUuoPDwDwxhtvaMzBgAED0KxZM4SGhsoKz5fh30Llwt221dh//vMfPHz4EIcPH5bacnJysHPnTgwbNqzYdVasWIG2bdvC1tYWZmZmaNGiBXbu3KnRJzw8HAqFAps3b9ZoX7RoERQKBQ4cOCC1vfg9T+FuzevXr2PEiBGwsrKCvb09Zs+eDSEE7ty5g/79+8PS0hJOTk748ssvNR6jcJf0i7sEjx8/DoVCobGrrXPnzmjatCn+/vtvdOrUCbVq1UKDBg2k53PixAl4e3vDzMwMjRo1wpEjR145p9qKiYlBz549YWVlhVq1aqFTp074448/NPrcvn0bEydORKNGjWBmZgZbW1sMGTKkyHMtnIMTJ05g4sSJcHBwQN26dTF37lx8+umnAAAPDw9pV6Tc3acKhQLt27eHEAK3bt2SVd+WLVswZMgQAECXLl2kGp7//3Lw4EF06NABtWvXhoWFBfr06YN//vmnVLXdunULQ4YMgY2NDWrVqoU2bdpg//79ReZGCIGwsDDp8eV68803YWdnh7i4OADAb7/9hiFDhsDNzQ1KpRKurq6YNm0asrKypHVGjRqFsLAwaQ5ffOzivvO8d+8exowZA0dHRyiVSjRp0qTI31Xha/vHH3/EwoULUbduXZiamqJbt264efOm1K9z587Yv38/bt++LT3281v+q1evRpMmTVCrVi3UqVMHLVu2REREhOy5qS645VmNubu7w8fHB99//7306fngwYNIS0uDv78/Vq1aVWSdr7/+Gu+++y6GDx+OnJwcREZGYsiQIdi3bx/69OkDABg9ejR2796NoKAgdO/eHa6urrh06RLmzZuHsWPHonfv3q+sbejQofDy8sKSJUuwf/9+LFiwADY2Nvjmm2/QtWtXLF26FNu3b8cnn3yCVq1aoWPHjlrNwePHj9G3b1/4+/tjyJAhWLduHfz9/bF9+3ZMnToVH374IYYNG4bly5dj8ODBuHPnDiwsLF45bmZmZrFb7pmZmUXajh49il69eqFFixYICQmBkZERwsPD0bVrV/z2229o3bo1AODs2bM4deoU/P39UbduXcTHx2PdunXo3Lkzrly5glq1ammMO3HiRNjb22POnDnIyMhAr169cP36dXz//ff46quvYGdnBwCwt7eXPW+FgVinTh2prTT1dezYEVOmTMGqVavw+eefw8vLCwCk/27btg0BAQHw8/PD0qVLkZmZiXXr1qF9+/a4cOHCS3fzJicno23btsjMzMSUKVNga2uLrVu34t1338XOnTsxYMAAdOzYEdu2bcPIkSOlXbHaePz4MR4/fowGDRoAAHbs2IHMzEx89NFHsLW1xZkzZ7B69WrcvXsXO3bsAABMmDAB9+/fx+HDh7Ft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\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['MaxHR'])\n",
    "plt.title('Maximum Heart Rate of Patients')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "85da2af0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:36.637097Z",
     "iopub.status.busy": "2025-10-18T20:27:36.636762Z",
     "iopub.status.idle": "2025-10-18T20:27:36.876252Z",
     "shell.execute_reply": "2025-10-18T20:27:36.875282Z"
    },
    "papermill": {
     "duration": 0.254309,
     "end_time": "2025-10-18T20:27:36.878266",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.623957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "sns.histplot(data['Oldpeak'])\n",
    "plt.title('Exercise-induced ST (Sinus Tachycardia) segment depression relative to rest')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f553a2e",
   "metadata": {
    "papermill": {
     "duration": 0.013237,
     "end_time": "2025-10-18T20:27:36.905821",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.892584",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "--------------------------------------------------------------------------------------\n",
    "## Experimenting with Various Types of Regressions \n",
    "In this section, the student used several regression algorithms to estimate future trends between the variables in identifying heart failure.\n",
    "### Linear Regression\n",
    "For this first experiment, the data will be examined using linear regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). First, set up every variable that will be used. Then split the training data with the test data (the difference being, training data is what is being used to train the model, while test data is how effective is the model) using sklearn \"train_test_split\" function. Then fit the training data inside a linear regression model. And using the test data the model can finally predict how each variable will affect each other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1b0bdf34",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:36.930947Z",
     "iopub.status.busy": "2025-10-18T20:27:36.930613Z",
     "iopub.status.idle": "2025-10-18T20:27:36.966951Z",
     "shell.execute_reply": "2025-10-18T20:27:36.965838Z"
    },
    "papermill": {
     "duration": 0.051407,
     "end_time": "2025-10-18T20:27:36.968627",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.917220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Model Training with Linear Regression.\n",
    "model_1 = LinearRegression()\n",
    "model_1.fit(fixed_x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "dada6a7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:36.994034Z",
     "iopub.status.busy": "2025-10-18T20:27:36.993655Z",
     "iopub.status.idle": "2025-10-18T20:27:37.004985Z",
     "shell.execute_reply": "2025-10-18T20:27:37.003621Z"
    },
    "papermill": {
     "duration": 0.026031,
     "end_time": "2025-10-18T20:27:37.006935",
     "exception": false,
     "start_time": "2025-10-18T20:27:36.980904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 6.972237620979256\n",
      "Mean Squared Error (MSE): 70.85360456827898\n",
      "RÂ² Score: 0.17234591287426548\n"
     ]
    }
   ],
   "source": [
    "# Model Prediction.\n",
    "y_pred = model_1.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9e25e5ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.031820Z",
     "iopub.status.busy": "2025-10-18T20:27:37.031459Z",
     "iopub.status.idle": "2025-10-18T20:27:37.063514Z",
     "shell.execute_reply": "2025-10-18T20:27:37.062274Z"
    },
    "papermill": {
     "duration": 0.046379,
     "end_time": "2025-10-18T20:27:37.065043",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.018664",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.26365165 0.11791806 0.25718403 0.31264867 0.15426227]\n",
      "Mean CV Score: 0.22113293411712331\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_1, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1062b080",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.090531Z",
     "iopub.status.busy": "2025-10-18T20:27:37.090134Z",
     "iopub.status.idle": "2025-10-18T20:27:37.097672Z",
     "shell.execute_reply": "2025-10-18T20:27:37.096315Z"
    },
    "papermill": {
     "duration": 0.022689,
     "end_time": "2025-10-18T20:27:37.099647",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.076958",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([46.00535709, 49.01027499, 46.96007524, 48.63776595, 62.03798978,\n",
       "       62.65924293, 48.01689628, 46.19130449, 46.45317204, 48.50651934,\n",
       "       53.92977573, 47.12346147, 51.45430374, 45.47583873, 49.41679995,\n",
       "       48.56653277, 51.99183737, 53.89346131, 52.68010404, 55.5069601 ,\n",
       "       57.91510882, 57.48879425, 57.19953872, 50.93922525, 54.08292442,\n",
       "       60.15066242, 52.72594839, 56.56109591, 58.33067541, 51.32638275,\n",
       "       57.41018513, 48.82891173, 57.07804067, 59.30601066, 53.84546237,\n",
       "       54.95846227, 55.8575909 , 57.22609223, 52.43424365, 54.12826039,\n",
       "       56.83154928, 57.29786475, 48.04935059, 52.46961924, 53.29275829,\n",
       "       50.37321453, 51.36409748, 61.41296405, 50.029135  , 54.34463037,\n",
       "       63.24051947, 49.25673199, 46.85856866, 53.35632818, 45.58733321,\n",
       "       58.60576262, 55.47738285, 50.31941916, 57.5366004 , 57.41853207,\n",
       "       50.66691055, 48.65892959, 52.86410167, 46.22270891, 58.12815131,\n",
       "       53.11755405, 55.86980714, 48.65828998, 45.34545568, 55.14431719,\n",
       "       52.8531301 , 58.05382271, 61.57756733, 50.44057928, 54.94705635,\n",
       "       60.53904073, 44.62906588, 51.25336932, 65.83625508, 53.66738495,\n",
       "       57.42384523, 52.97836226, 51.28157402, 55.93785917, 56.33612738,\n",
       "       57.6963635 , 57.45698699, 53.69330292, 56.60989022, 54.74517292,\n",
       "       57.83890355, 50.18358508, 53.58448311, 51.15760908, 56.61318073,\n",
       "       54.92536077, 47.5048357 , 57.53293294, 54.12578144, 55.56423885,\n",
       "       56.05775873, 59.2810918 , 54.29818434, 57.12922383, 57.97555305,\n",
       "       49.42497363, 45.0643273 , 50.12873531, 54.61116574, 55.90657732,\n",
       "       55.60092023, 60.55297638, 55.71215293, 46.89646445, 59.2615364 ,\n",
       "       54.22639536, 46.9067754 , 52.19514349, 58.70447694, 51.70861158,\n",
       "       58.30120569, 48.73213199, 56.25429931, 51.50694271, 52.42769372,\n",
       "       52.98106078, 52.30281644, 54.68141557, 57.54242618, 59.39726889,\n",
       "       54.14478065, 56.26053651, 43.57862957, 48.07795471, 55.27730602,\n",
       "       48.76531124, 52.99355456, 47.08802934, 55.59786808, 50.86338212,\n",
       "       54.22085454, 51.08906437, 57.99284094, 49.27020059, 58.69179532,\n",
       "       45.64813426, 57.1065894 , 52.74747057, 52.11748505, 49.55483737,\n",
       "       54.59684617, 58.19269563, 53.48130035, 51.30604488, 54.91811875,\n",
       "       54.76984937, 56.31110496, 47.94804589, 46.24696651, 55.98226741,\n",
       "       54.28651424, 58.98085424, 51.56882343, 56.76563371, 55.04116683,\n",
       "       54.25655161, 52.03790379, 54.80278965, 54.02344623, 50.19140795,\n",
       "       51.20410572, 49.14938815, 54.22110628, 55.47696162, 58.52755831,\n",
       "       59.13390198, 55.20123721, 57.62772809, 56.20830051, 59.21314216,\n",
       "       53.30287261, 56.34697793, 49.4111092 , 48.0998219 ])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9c2ae036",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.124313Z",
     "iopub.status.busy": "2025-10-18T20:27:37.124004Z",
     "iopub.status.idle": "2025-10-18T20:27:37.482546Z",
     "shell.execute_reply": "2025-10-18T20:27:37.481566Z"
    },
    "papermill": {
     "duration": 0.372852,
     "end_time": "2025-10-18T20:27:37.484381",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.111529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7c30d33b0c10>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "18c4b1fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.511105Z",
     "iopub.status.busy": "2025-10-18T20:27:37.510774Z",
     "iopub.status.idle": "2025-10-18T20:27:37.516850Z",
     "shell.execute_reply": "2025-10-18T20:27:37.515812Z"
    },
    "papermill": {
     "duration": 0.021026,
     "end_time": "2025-10-18T20:27:37.518420",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.497394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Resting_BP_x_train = fixed_x_train[\"RestingBP\"]\n",
    "Cholesterol_x_train = fixed_x_train[\"Cholesterol\"]\n",
    "Max_HR_x_train = fixed_x_train[\"MaxHR\"]\n",
    "Oldpeak_x_train = fixed_x_train[\"Oldpeak\"]\n",
    "\n",
    "Resting_BP_x_test = x_test[\"RestingBP\"]\n",
    "Cholesterol_x_test = x_test[\"Cholesterol\"]\n",
    "Max_HR_x_test = x_test[\"MaxHR\"]\n",
    "Oldpeak_x_test = x_test[\"Oldpeak\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "787d0ace",
   "metadata": {
    "papermill": {
     "duration": 0.012777,
     "end_time": "2025-10-18T20:27:37.544037",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.531260",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Lasso Regression\n",
    "For the second experiment, the data will be examined using Lasso Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3ed242b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.571318Z",
     "iopub.status.busy": "2025-10-18T20:27:37.571008Z",
     "iopub.status.idle": "2025-10-18T20:27:37.585644Z",
     "shell.execute_reply": "2025-10-18T20:27:37.584611Z"
    },
    "papermill": {
     "duration": 0.030193,
     "end_time": "2025-10-18T20:27:37.587421",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.557228",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 7.02934586627313\n",
      "Mean Squared Error (MSE): 71.5187890349006\n",
      "RÂ² Score: 0.164575769832899\n"
     ]
    }
   ],
   "source": [
    "model_2 = Lasso(alpha=0.1)\n",
    "model_2.fit(fixed_x_train, y_train)\n",
    "\n",
    "y_pred = model_2.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "656273f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.613599Z",
     "iopub.status.busy": "2025-10-18T20:27:37.613315Z",
     "iopub.status.idle": "2025-10-18T20:27:37.640032Z",
     "shell.execute_reply": "2025-10-18T20:27:37.638901Z"
    },
    "papermill": {
     "duration": 0.041684,
     "end_time": "2025-10-18T20:27:37.641773",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.600089",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.21944937 0.13531444 0.23079431 0.27879509 0.13952571]\n",
      "Mean CV Score: 0.200775783997215\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_2, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "bad42ebd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.669022Z",
     "iopub.status.busy": "2025-10-18T20:27:37.668687Z",
     "iopub.status.idle": "2025-10-18T20:27:37.676382Z",
     "shell.execute_reply": "2025-10-18T20:27:37.675362Z"
    },
    "papermill": {
     "duration": 0.023392,
     "end_time": "2025-10-18T20:27:37.677966",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.654574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([48.36633314, 49.31473415, 49.2042457 , 50.63392913, 60.31507737,\n",
       "       58.77056672, 49.57263332, 47.91786687, 48.02523827, 49.76981273,\n",
       "       53.73359462, 48.050453  , 53.16711274, 47.48838125, 50.7095234 ,\n",
       "       50.27484272, 52.64636474, 53.49499576, 53.01409158, 54.6103619 ,\n",
       "       57.75044495, 57.29756856, 56.66506047, 50.28834988, 54.63459618,\n",
       "       60.39354327, 54.14540836, 56.24733231, 58.22552176, 51.57265069,\n",
       "       56.81168626, 49.44628126, 55.22743451, 57.49075029, 53.07491982,\n",
       "       55.42924391, 54.97493457, 56.54512521, 51.84001812, 52.86941965,\n",
       "       55.86010965, 55.60925092, 49.54695333, 52.81564053, 53.54236675,\n",
       "       51.88956984, 52.57894563, 59.98984612, 49.7328034 , 54.79379284,\n",
       "       60.55041358, 49.96207961, 48.21892241, 54.46752258, 46.95478686,\n",
       "       57.79845527, 53.67240958, 50.77662284, 56.9568148 , 56.12447553,\n",
       "       51.25157549, 50.62183055, 53.82017711, 47.40414654, 56.38144417,\n",
       "       52.14133475, 56.10076509, 49.87368886, 47.37893182, 55.00853565,\n",
       "       52.94742028, 56.5179694 , 57.42436153, 51.14108704, 52.9921894 ,\n",
       "       57.95082843, 46.7357424 , 51.41608435, 62.48953712, 54.09994134,\n",
       "       55.54954873, 52.32425053, 52.12848837, 55.2034044 , 56.85283019,\n",
       "       55.22159145, 55.94977205, 54.10409739, 56.33506229, 55.43594325,\n",
       "       56.12239751, 51.18528242, 53.50741401, 52.42746588, 57.31608394,\n",
       "       54.21562484, 48.67154473, 56.31654691, 54.6020997 , 55.64860804,\n",
       "       55.45630402, 59.1477775 , 54.89908622, 57.88234887, 56.55500016,\n",
       "       51.35167381, 47.0568176 , 50.07152904, 54.85122151, 55.69280341,\n",
       "       55.46210996, 58.95801678, 55.32857185, 47.70728011, 58.24631067,\n",
       "       53.24720417, 49.24532404, 52.7701735 , 56.83716208, 50.71991352,\n",
       "       58.11022927, 49.42522259, 55.73852451, 50.8252069 , 53.19965912,\n",
       "       51.43866875, 53.39380853, 54.53023334, 55.82503275, 58.48653797,\n",
       "       54.31572316, 55.37730151, 46.47368717, 49.20944076, 54.71845265,\n",
       "       49.74525878, 53.14555167, 48.1346877 , 55.90127502, 51.91120226,\n",
       "       54.87641479, 52.35296919, 57.12680993, 50.7095234 , 56.73063419,\n",
       "       47.53748915, 57.58337135, 53.89799501, 51.62799266, 50.19429879,\n",
       "       54.38490063, 57.92806997, 53.83880097, 52.96743994, 53.02382093,\n",
       "       55.13234442, 56.16809717, 49.95584554, 48.45160686, 55.67174474,\n",
       "       54.65531375, 58.69619419, 53.61219222, 55.69337716, 54.58320608,\n",
       "       54.33744261, 51.70893627, 56.29283647, 54.00036686, 51.65272935,\n",
       "       52.0502052 , 49.31992921, 55.64653001, 55.65172507, 57.26437417,\n",
       "       58.20688222, 54.92383568, 56.80723901, 56.5096573 , 58.49386963,\n",
       "       55.02705104, 56.63762211, 50.23999845, 50.27795976])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "4dc158ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:37.705058Z",
     "iopub.status.busy": "2025-10-18T20:27:37.704675Z",
     "iopub.status.idle": "2025-10-18T20:27:38.022998Z",
     "shell.execute_reply": "2025-10-18T20:27:38.021659Z"
    },
    "papermill": {
     "duration": 0.33432,
     "end_time": "2025-10-18T20:27:38.025121",
     "exception": false,
     "start_time": "2025-10-18T20:27:37.690801",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7c30d3280690>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85bbaabd",
   "metadata": {
    "papermill": {
     "duration": 0.013568,
     "end_time": "2025-10-18T20:27:38.053248",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.039680",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Ridge Regression\n",
    "For the third experiment, the data will be examined using Ridge Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1602a4e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.081778Z",
     "iopub.status.busy": "2025-10-18T20:27:38.081389Z",
     "iopub.status.idle": "2025-10-18T20:27:38.095025Z",
     "shell.execute_reply": "2025-10-18T20:27:38.094082Z"
    },
    "papermill": {
     "duration": 0.029728,
     "end_time": "2025-10-18T20:27:38.096410",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.066682",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "Ridge(random_state=42)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_3 = Ridge(alpha=1.0, solver='auto', random_state=42)\n",
    "model_3.fit(fixed_x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "69333700",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.126340Z",
     "iopub.status.busy": "2025-10-18T20:27:38.126035Z",
     "iopub.status.idle": "2025-10-18T20:27:38.135209Z",
     "shell.execute_reply": "2025-10-18T20:27:38.134113Z"
    },
    "papermill": {
     "duration": 0.025523,
     "end_time": "2025-10-18T20:27:38.136568",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.111045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 6.972528801541983\n",
      "Mean Squared Error (MSE): 70.77509888192336\n",
      "RÂ² Score: 0.17326295234700295\n"
     ]
    }
   ],
   "source": [
    "y_pred = model_3.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "44fcf6ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.165855Z",
     "iopub.status.busy": "2025-10-18T20:27:38.165432Z",
     "iopub.status.idle": "2025-10-18T20:27:38.194545Z",
     "shell.execute_reply": "2025-10-18T20:27:38.193520Z"
    },
    "papermill": {
     "duration": 0.045906,
     "end_time": "2025-10-18T20:27:38.196197",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.150291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [0.25746828 0.12459472 0.25582286 0.30873128 0.15451552]\n",
      "Mean CV Score: 0.2202265316843662\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_3, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "c0c74946",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.225569Z",
     "iopub.status.busy": "2025-10-18T20:27:38.225271Z",
     "iopub.status.idle": "2025-10-18T20:27:38.232912Z",
     "shell.execute_reply": "2025-10-18T20:27:38.231788Z"
    },
    "papermill": {
     "duration": 0.024352,
     "end_time": "2025-10-18T20:27:38.234679",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.210327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([46.48865992, 49.23268065, 47.40392975, 49.05098743, 61.52937894,\n",
       "       61.96435714, 48.28688793, 46.55327691, 46.80539492, 48.75482372,\n",
       "       53.89094325, 47.29438271, 51.92639139, 45.86058206, 49.70041209,\n",
       "       49.0866574 , 52.03876184, 53.93205627, 52.75022838, 55.45671315,\n",
       "       57.8086051 , 57.547521  , 56.99876539, 50.80478316, 54.15814609,\n",
       "       60.12645031, 52.94540947, 56.4152986 , 58.39208332, 51.37533587,\n",
       "       57.26990862, 48.95612185, 56.78383819, 58.89868506, 53.6643057 ,\n",
       "       55.19628342, 55.68002833, 57.0638525 , 52.38115857, 53.74541842,\n",
       "       56.79489712, 56.9119533 , 48.39145572, 52.55179788, 53.35090118,\n",
       "       50.68505713, 51.61865759, 61.05004514, 50.02427988, 54.33755137,\n",
       "       62.62157412, 49.3610978 , 47.17989428, 53.55412741, 45.92728531,\n",
       "       58.40497418, 55.29127898, 50.40731828, 57.33010699, 57.14105994,\n",
       "       50.69751687, 49.18883821, 53.19195311, 46.50221913, 57.66534755,\n",
       "       52.83470384, 55.84998141, 48.88889928, 45.81638322, 55.10425155,\n",
       "       52.84992432, 57.66566196, 60.67767512, 50.60349002, 54.67673875,\n",
       "       60.11946228, 45.07527961, 51.30460173, 65.15992372, 53.89333906,\n",
       "       57.12188997, 52.96791984, 51.44800882, 55.9066927 , 56.38969751,\n",
       "       57.11274405, 57.28876152, 53.75226789, 56.54376337, 54.81967584,\n",
       "       57.62374627, 50.31055996, 53.49510053, 51.40493083, 56.73990736,\n",
       "       54.76143427, 47.74109358, 57.39648804, 54.12039872, 55.68766913,\n",
       "       55.97302846, 59.18087882, 54.37928629, 57.22302346, 57.64162364,\n",
       "       49.80934534, 45.53984648, 50.11066907, 54.83769641, 55.96477841,\n",
       "       55.50640439, 60.19853833, 55.73634354, 47.05214941, 58.96589924,\n",
       "       54.15204624, 47.42902994, 52.34324477, 58.16406566, 51.46590195,\n",
       "       58.18467004, 48.84689021, 56.15208449, 51.36000078, 52.57662734,\n",
       "       52.87010811, 52.52161122, 54.79115512, 57.10923011, 59.28128665,\n",
       "       54.31207001, 56.18132328, 44.24287434, 48.26001816, 55.22526062,\n",
       "       48.97045789, 53.00707657, 47.32941105, 55.63453093, 51.05217814,\n",
       "       54.44625557, 51.55281484, 57.80658176, 49.560978  , 58.36141314,\n",
       "       46.08547411, 57.12666737, 53.00682678, 51.94020599, 49.7173656 ,\n",
       "       54.50758285, 58.09109595, 53.61307664, 51.43706806, 54.64359977,\n",
       "       54.85920014, 56.15553425, 48.36495933, 46.74575837, 56.01958686,\n",
       "       54.52265857, 58.90736567, 51.9431175 , 56.66557604, 54.82822186,\n",
       "       54.25651109, 52.18309085, 54.98173483, 54.17675022, 50.53028577,\n",
       "       51.37368223, 49.1578415 , 54.49304544, 55.48036593, 58.34474348,\n",
       "       58.90231633, 55.0148204 , 57.44214471, 56.24178727, 58.97912153,\n",
       "       53.37801334, 56.31907798, 49.56557538, 48.51846599])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predicted Data\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8954ed2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.266379Z",
     "iopub.status.busy": "2025-10-18T20:27:38.266104Z",
     "iopub.status.idle": "2025-10-18T20:27:38.555593Z",
     "shell.execute_reply": "2025-10-18T20:27:38.554421Z"
    },
    "papermill": {
     "duration": 0.30652,
     "end_time": "2025-10-18T20:27:38.557243",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.250723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7c30d1169990>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d14e40d2",
   "metadata": {
    "papermill": {
     "duration": 0.014892,
     "end_time": "2025-10-18T20:27:38.587671",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.572779",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Decision Tree Regression\n",
    "For the fourth experiment, the data will be examined using Data Tree Regression to model and predict the relationship between the target (Age) and every features (Resting BP, Cholesterol, Max HR, Oldpeak). It will largely be the same as the first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "3eafe81b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.620186Z",
     "iopub.status.busy": "2025-10-18T20:27:38.619892Z",
     "iopub.status.idle": "2025-10-18T20:27:38.633659Z",
     "shell.execute_reply": "2025-10-18T20:27:38.632538Z"
    },
    "papermill": {
     "duration": 0.031476,
     "end_time": "2025-10-18T20:27:38.635233",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.603757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE): 8.983695652173912\n",
      "Mean Squared Error (MSE): 132.97282608695653\n",
      "RÂ² Score: -0.5532802269992161\n"
     ]
    }
   ],
   "source": [
    "model_4 = DecisionTreeRegressor(random_state=0)\n",
    "model_4.fit(fixed_x_train, y_train)\n",
    "\n",
    "y_pred = model_4.predict(fixed_x_test)\n",
    "\n",
    "# Finding Mean Absolute Error (MAE), Mean Squared Error (MSE) and R-squared (RÂ²) metrics.\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f'Mean Absolute Error (MAE): {mae}')\n",
    "print(f'Mean Squared Error (MSE): {mse}')\n",
    "print(f'RÂ² Score: {r2}')\n",
    "\n",
    "# NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better \n",
    "# fit for the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "05b81936",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.667084Z",
     "iopub.status.busy": "2025-10-18T20:27:38.666788Z",
     "iopub.status.idle": "2025-10-18T20:27:38.703294Z",
     "shell.execute_reply": "2025-10-18T20:27:38.701991Z"
    },
    "papermill": {
     "duration": 0.054471,
     "end_time": "2025-10-18T20:27:38.705078",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.650607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-Validation Scores: [-0.41432531 -0.57887683 -0.31634421 -0.43963124 -0.70625369]\n",
      "Mean CV Score: -0.49108625524885613\n"
     ]
    }
   ],
   "source": [
    "# Cross-Validation.\n",
    "cv_scores = cross_val_score(model_4, fixed_x_train, y_train, cv=5)  # 5-fold CV\n",
    "print(f'Cross-Validation Scores: {cv_scores}')\n",
    "print(f'Mean CV Score: {cv_scores.mean()}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "98d6aff2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.736862Z",
     "iopub.status.busy": "2025-10-18T20:27:38.736524Z",
     "iopub.status.idle": "2025-10-18T20:27:38.742265Z",
     "shell.execute_reply": "2025-10-18T20:27:38.741288Z"
    },
    "papermill": {
     "duration": 0.023278,
     "end_time": "2025-10-18T20:27:38.743758",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.720480",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[41. 49. 50. 58. 48. 57. 77. 44. 37. 32. 47. 39. 41. 43. 37. 43. 55. 62.\n",
      " 54. 53. 50. 70. 51. 36. 63. 62. 48. 51. 70. 53. 63. 50. 53. 65. 62. 41.\n",
      " 69. 64. 48. 46. 67. 47. 56. 60. 43. 54. 51. 74. 41. 59. 63. 53. 42. 46.\n",
      " 52. 69. 55. 59. 51. 69. 45. 43. 41. 44. 56. 55. 61. 32. 42. 48. 52. 62.\n",
      " 53. 52. 67. 69. 33. 59. 62. 47. 59. 38. 58. 52. 56. 64. 67. 67. 52. 46.\n",
      " 51. 47. 66. 62. 38. 67. 57. 46. 51. 55. 57. 37. 46. 54. 65. 35. 32. 35.\n",
      " 38. 61. 55. 55. 56. 37. 64. 57. 31. 54. 61. 35. 37. 52. 59. 68. 54. 28.\n",
      " 46. 36. 56. 55. 46. 46. 38. 45. 54. 56. 60. 44. 54. 40. 55. 38. 58. 58.\n",
      " 46. 32. 54. 47. 51. 60. 57. 70. 49. 47. 61. 54. 61. 58. 31. 61. 64. 72.\n",
      " 60. 62. 60. 58. 48. 62. 60. 48. 67. 47. 58. 65. 56. 69. 61. 55. 56. 39.\n",
      " 51. 61. 53. 47.]\n"
     ]
    }
   ],
   "source": [
    "# Predicted Data\n",
    "print(y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "fa8f4823",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-18T20:27:38.775528Z",
     "iopub.status.busy": "2025-10-18T20:27:38.775249Z",
     "iopub.status.idle": "2025-10-18T20:27:39.076171Z",
     "shell.execute_reply": "2025-10-18T20:27:39.075149Z"
    },
    "papermill": {
     "duration": 0.318629,
     "end_time": "2025-10-18T20:27:39.077727",
     "exception": false,
     "start_time": "2025-10-18T20:27:38.759098",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7c30cbf48690>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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m8b111/P3XffjaOjI3///TchISFMnz4dUK+TOXPm8N///peIiAgCAgK4+eabue222wgLC+Phhx9mypQp2Nra8tVXX+Hv709MTIzhngMGDMDb25tx48bxzDPPoNPp+O677yoEB7U1duxY3nzzTX755Reuu+66CuvOdOjQgbZt2/L8888TFxeHh4cHP/30k8m9dI888gjvvPMOjzzyCH369OHPP//k5MmTlY5755132LhxI/369ePRRx+lU6dOpKens3fvXtavX096ejqgXsdBQUFcd911BAYGcuzYMWbNmsWwYcNwd3ev83Mh6okVZuQIUSX99MO///672uPGjRunubq6Vrl/3rx5Wu/evTVnZ2fN3d1d69q1q/bCCy9o8fHxhmNKS0u1N954QwsODtacnZ21G2+8UTt8+LDWqlWraqfo6m3ZskW79dZbNXd3d83V1VXr1q2b9sknnxj2l5SUaE8//bTm7++v6XS6StMtLdnGmqSnp2uOjo4aoB09erTS/hUrVmjdunXTnJyctPDwcO3dd9/Vvvrqq0pTQa+coqtpmnbmzBktKipKc3R01AIDA7VXXnlFW7dundHnbN++fdrdd9+t+fr6ao6OjlqrVq20++67T9uwYYOmaZpWWFioTZkyRevevbvhee3evbv26aefmvxYNU3TZs+erQFa3759je7/8ccftdtuu00LCAjQHBwctLCwMO2xxx7TEhISqrzmTz/9pAHal19+WeUxmzZt0gBt5syZhm1fffWV1rNnT83R0VHz9vbWBg0apK1bt86wPzExURs2bJjm7u6uARWe3z179mj9+vUztPHDDz80OkV369at2rXXXqs5OztrISEh2gsvvKCtXbu20v+BqVN0y7vmmms0wOj/wdGjR7WoqCjNzc1N8/Pz0x599FHtwIEDlabfGptunJeXpz388MOap6en5u7urt13331acnJypSm6mqZpSUlJ2lNPPaWFhoZq9vb2WlBQkHbLLbdo8+bNMxzz2WefaTfccIPhtdW2bVttypQpWmZmplmPVzQsnaZZIFwWQgghhDCT5IQIIYQQwiokCBFCCCGEVUgQIoQQQgirkCBECCGEEFYhQYgQQgghrEKCECGEEEJYhRQrM6KsrIz4+Hjc3d0tvtqlEEII0ZxpmkZ2djYhISGV1ve6kgQhRsTHxxMaGmrtZgghhBBNVmxs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npOYmGj0+MTERMN+/baqjrnS9OnTeeONNyptDw0NNe2B1KfERPVlspUVfootUl9CCCGanoQi6Fx9mmTdzZ6tviwsOzsbT0/Pao+ROiHAyy+/XKF3paysjPT0dHx9fdE1sznZtZGVlUVoaCixsbHNYy2deiDPUc3kOaqZPEemkeepZtZ8jjRNIzs7m5CQkBqPtWoQ4ufnh62tLUlJFfMVkpKSCAoKMnpOUFBQtcfrvyclJREcHFzhmB49ehi9pqOjI46OFadGeXl5mfNQrgoeHh7yC18DeY5qJs9RzeQ5Mo08TzWz1nNUUw+InlVnxzg4ONC7d282bNhg2FZWVsaGDRvo37+/0XP69+9f4XiAdevWGY5v3bo1QUFBFY7Jyspi586dVV5TCCGEEA3P6sMxkydPZty4cfTp04e+ffsyY8YMcnNzmTBhAgAPPvggLVq0YPr06QBMmjSJQYMG8cEHHzBs2DAWL17M7t27mTdvHgA6nY5nn32W//73v0RGRtK6dWteffVVQkJCGDFihLUephBCCCGuYPUgZNSoUaSkpDB16lQSExPp0aMHa9asMSSWxsTEYGNzucNmwIABLFy4kP/85z+88sorREZGsnz5crp06WI45oUXXiA3N5d//etfZGRkMHDgQNasWYOTk1ODP77mwNHRkddee63SkJW4TJ6jmslzVDN5jkwjz1PNmspzZPU6IUIIIYS4Olm9YqoQQgghrk4ShAghhBDCKiQIEUIIIYRVSBAihBBCCKuQIEQAMGfOHLp162YobNO/f39+++03w/6CggKeeuopfH19cXNz45577qlUNO5q88477ximhOvJ8wSvv/46Op2uwleHDh0M++U5UuLi4hg7diy+vr44OzvTtWtXdu/ebdivaRpTp04lODgYZ2dnoqKiOHXqlBVb3LDCw8MrvY50Oh1PPfUUIK8jgNLSUl599VVat26Ns7Mzbdu2Zdq0aRXWbGn0ryNNCE3TVqxYof3666/ayZMntRMnTmivvPKKZm9vrx0+fFjTNE17/PHHtdDQUG3Dhg3a7t27tWuvvVYbMGCAlVttPbt27dLCw8O1bt26aZMmTTJsl+dJ01577TWtc+fOWkJCguErJSXFsF+eI01LT0/XWrVqpY0fP17buXOndvbsWW3t2rXa6dOnDce88847mqenp7Z8+XLtwIED2vDhw7XWrVtr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\n",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "\n",
    "sns.kdeplot(y_pred, label='Actual', color='r', shade=True, alpha=0.5, bw_adjust=.4)\n",
    "sns.kdeplot(y_test, label='Predicted', color='b', shade=True, alpha=0.5, bw_adjust=.2)\n",
    "plt.xlabel('Patient Age')\n",
    "plt.ylabel('Rate of heart failure')\n",
    "plt.title(\"Predicted Values Vs Actual Values\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8014e4e8",
   "metadata": {
    "papermill": {
     "duration": 0.016638,
     "end_time": "2025-10-18T20:27:39.110856",
     "exception": false,
     "start_time": "2025-10-18T20:27:39.094218",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Discussion of Results\n",
    "\n",
    "From the constant testing done, it seems the most likely age to be at risk of a heart failure is in your mid-fifties to sixties. From birth, it will keep rising then, continually drop near the end of one's fifties. Though, the data might not be extremely accurate due to the possibility that the patients who live past sixty years old die of natural causes (which is why there is a lower rate than those in their mid-fifties). Other than this, it could also be due to their lifestyle, and so forth. Another possibility is that the current model the student is using isn't as efficient as they would like to have as pointed out in their model validations which is the following:\n",
    "\n",
    "---------------------------------------------------\n",
    "\n",
    "First model (Linear Regression)\n",
    "Mean Absolute Error (MAE): 7.385736883877737\n",
    "\n",
    "Mean Squared Error (MSE): 81.2562086920578\n",
    "\n",
    "RÂ² Score: 0.22769534266974178\n",
    "\n",
    "Cross-Validation Scores: (0.19063422 0.16090571 0.27361999 0.26545888 0.08118323)\n",
    "Mean CV Score: 0.19436040594188364\n",
    "\n",
    "....................\n",
    "\n",
    "Second model (Lasso Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 7.503483560939664\n",
    "Mean Squared Error (MSE): 84.33026302558702\n",
    "RÂ² Score: 0.19847780327323628\n",
    "\n",
    "Cross-Validation Scores: (0.21239374 0.1530536  0.22719979 0.20330744 0.07693318)\n",
    "Mean CV Score: 0.1745775507157168\n",
    "\n",
    "....................\n",
    "\n",
    "Third Model (Ridge Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 7.400232115521056\n",
    "Mean Squared Error (MSE): 81.75270135211616\n",
    "RÂ² Score: 0.22297639749785314\n",
    "\n",
    "Cross-Validation Scores: (0.19967374 0.16367696 0.26930703 0.25459058 0.08762054)\n",
    "Mean CV Score: 0.1949737688359554\n",
    "\n",
    "....................\n",
    "\n",
    "Fourth Model (Decision Tree Regression)\n",
    "\n",
    "Mean Absolute Error (MAE): 9.21195652173913\n",
    "Mean Squared Error (MSE): 127.27717391304348\n",
    "RÂ² Score: -0.20971376547235487\n",
    "\n",
    "Cross-Validation Scores: (-0.75011024 -0.57370505 -0.2772151  -0.69756523 -0.5951553)\n",
    "Mean CV Score: -0.578750183830927\n",
    "\n",
    "NOTE: A lower MAE/MSE/CV and a higher RÂ²/Cross-Validation score indicate a better fit for the data.\n",
    "\n",
    "---------------------------------------------------\n",
    "\n",
    "Regardless, there does seem to be an upward trend in how the longer one live, the higher their chances of getting a heart failure."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e86106c",
   "metadata": {
    "papermill": {
     "duration": 0.015841,
     "end_time": "2025-10-18T20:27:39.143182",
     "exception": false,
     "start_time": "2025-10-18T20:27:39.127341",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## References:\n",
    "- [https://pyquesthub.com/building-predictive-models-in-python-a-step-by-step-guide](https://pyquesthub.com/building-predictive-models-in-python-a-step-by-step-guide)\n",
    "- [https://www.pythontutorials.net/blog/lasso-sklearn/](https://www.pythontutorials.net/blog/lasso-sklearn/)\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1582403,
     "sourceId": 2603715,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31153,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 15.036595,
   "end_time": "2025-10-18T20:27:39.982544",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-10-18T20:27:24.945949",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
